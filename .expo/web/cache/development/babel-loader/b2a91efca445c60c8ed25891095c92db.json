{"ast":null,"code":"import React, { useContext } from \"react\";\nimport jwtDecode from \"jwt-decode\";\nimport AuthContext from \"./reactContext\";\nimport authStorage from \"./store\";\nexport default function useAuth() {\n  var _useContext = useContext(AuthContext),\n      user = _useContext.user,\n      setUser = _useContext.setUser;\n\n  var logIn = function logIn(authToken) {\n    var user = jwtDecode(authToken.accessToken);\n    setUser(user);\n    authStorage.storeAccessToken(authToken.accessToken);\n    authStorage.storeRefreshToken(authToken.refreshToken);\n  };\n\n  var logOut = function logOut() {\n    setUser(null);\n    authStorage.removeToken();\n  };\n\n  return {\n    user: user,\n    logIn: logIn,\n    logOut: logOut\n  };\n}","map":{"version":3,"sources":["/Users/iShrusti/Documents/GitHub/Pharmacy_App/components/authorization/useAuth.js"],"names":["React","useContext","jwtDecode","AuthContext","authStorage","useAuth","user","setUser","logIn","authToken","accessToken","storeAccessToken","storeRefreshToken","refreshToken","logOut","removeToken"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,WAAP;AAEA,OAAOC,WAAP;AAEA,eAAe,SAASC,OAAT,GAAmB;AAAA,oBACNJ,UAAU,CAACE,WAAD,CADJ;AAAA,MACxBG,IADwB,eACxBA,IADwB;AAAA,MAClBC,OADkB,eAClBA,OADkB;;AAGhC,MAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,SAAD,EAAe;AAC3B,QAAMH,IAAI,GAAGJ,SAAS,CAACO,SAAS,CAACC,WAAX,CAAtB;AACAH,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAF,IAAAA,WAAW,CAACO,gBAAZ,CAA6BF,SAAS,CAACC,WAAvC;AACAN,IAAAA,WAAW,CAACQ,iBAAZ,CAA8BH,SAAS,CAACI,YAAxC;AACD,GALD;;AAOA,MAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AACnBP,IAAAA,OAAO,CAAC,IAAD,CAAP;AACAH,IAAAA,WAAW,CAACW,WAAZ;AACD,GAHD;;AAKA,SAAO;AAAET,IAAAA,IAAI,EAAJA,IAAF;AAAQE,IAAAA,KAAK,EAALA,KAAR;AAAeM,IAAAA,MAAM,EAANA;AAAf,GAAP;AACD","sourcesContent":["import React, { useContext } from \"react\";\nimport jwtDecode from \"jwt-decode\";\nimport AuthContext from \"./reactContext\";\n\nimport authStorage from \"./store\";\n\nexport default function useAuth() {\n  const { user, setUser } = useContext(AuthContext);\n\n  const logIn = (authToken) => {\n    const user = jwtDecode(authToken.accessToken);\n    setUser(user);\n    authStorage.storeAccessToken(authToken.accessToken);\n    authStorage.storeRefreshToken(authToken.refreshToken);\n  };\n\n  const logOut = () => {\n    setUser(null);\n    authStorage.removeToken();\n  };\n\n  return { user, logIn, logOut };\n}\n"]},"metadata":{},"sourceType":"module"}
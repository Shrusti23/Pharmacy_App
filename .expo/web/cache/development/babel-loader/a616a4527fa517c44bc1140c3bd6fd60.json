{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/iShrusti/Documents/GitHub/Pharmacy_App/node_modules/react-native-sectioned-multi-select/lib/components/RowSubItem.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ItemIcon from \"./ItemIcon\";\nimport { callIfFunction } from \"../helpers\";\n\nvar RowSubItem = function (_Component) {\n  _inherits(RowSubItem, _Component);\n\n  var _super = _createSuper(RowSubItem);\n\n  function RowSubItem() {\n    var _this;\n\n    _classCallCheck(this, RowSubItem);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this._itemSelected = function () {\n      var _this$props = _this.props,\n          subItem = _this$props.subItem,\n          uniqueKey = _this$props.uniqueKey,\n          selectedItems = _this$props.selectedItems;\n      return selectedItems.includes(subItem[uniqueKey]);\n    };\n\n    _this._toggleItem = function () {\n      var subItem = _this.props.subItem;\n\n      _this.props._toggleSubItem(subItem);\n    };\n\n    _this._renderSelectedIcon = function () {\n      var _this$props2 = _this.props,\n          selectedIconComponent = _this$props2.selectedIconComponent,\n          unselectedIconComponent = _this$props2.unselectedIconComponent,\n          mergedColors = _this$props2.mergedColors,\n          selectChildren = _this$props2.selectChildren,\n          highlightedChildren = _this$props2.highlightedChildren,\n          uniqueKey = _this$props2.uniqueKey,\n          subItem = _this$props2.subItem,\n          icons = _this$props2.icons,\n          Icon = _this$props2.iconRenderer;\n      var highlightChild = !selectChildren && highlightedChildren.includes(subItem[uniqueKey]);\n\n      var itemSelected = _this._itemSelected();\n\n      return itemSelected || highlightChild ? React.createElement(View, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 7\n        }\n      }, selectedIconComponent ? callIfFunction(selectedIconComponent) : React.createElement(Icon, _extends({\n        style: {\n          color: highlightChild ? mergedColors.disabled : mergedColors.success,\n          paddingLeft: 10\n        }\n      }, icons.check, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }\n      }))) : unselectedIconComponent ? callIfFunction(unselectedIconComponent) : null;\n    };\n\n    return _this;\n  }\n\n  _createClass(RowSubItem, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      if (nextProps.selectedItems !== this.props.selectedItems) {\n        if (this.props.selectedItems.includes(this.props.subItem[this.props.uniqueKey]) && !nextProps.selectedItems.includes(this.props.subItem[this.props.uniqueKey])) {\n          return true;\n        }\n\n        if (!this.props.selectedItems.includes(this.props.subItem[this.props.uniqueKey]) && nextProps.selectedItems.includes(this.props.subItem[this.props.uniqueKey])) {\n          return true;\n        }\n\n        if (this.props.highlightChildren || this.props.selectChildren) {\n          if (this.props.highlightedChildren.includes(this.props.subItem[this.props.uniqueKey])) {\n            return true;\n          }\n\n          if (nextProps.highlightedChildren.includes(this.props.subItem[this.props.uniqueKey])) {\n            return true;\n          }\n        }\n      }\n\n      if (this.props.mergedStyles !== nextProps.mergedStyles) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          mergedStyles = _this$props3.mergedStyles,\n          mergedColors = _this$props3.mergedColors,\n          subItem = _this$props3.subItem,\n          uniqueKey = _this$props3.uniqueKey,\n          subItemFontFamily = _this$props3.subItemFontFamily,\n          selectChildren = _this$props3.selectChildren,\n          selectedIconOnLeft = _this$props3.selectedIconOnLeft,\n          highlightedChildren = _this$props3.highlightedChildren,\n          itemNumberOfLines = _this$props3.itemNumberOfLines,\n          displayKey = _this$props3.displayKey,\n          iconKey = _this$props3.iconKey,\n          Icon = _this$props3.iconRenderer;\n      var highlightChild = !selectChildren && highlightedChildren.includes(subItem[uniqueKey]);\n\n      var itemSelected = this._itemSelected();\n\n      return React.createElement(View, {\n        key: subItem[uniqueKey],\n        style: {\n          flexDirection: 'row',\n          flex: 1,\n          backgroundColor: mergedColors.subItemBackground\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 7\n        }\n      }, React.createElement(TouchableOpacity, {\n        disabled: highlightChild || subItem.disabled,\n        onPress: this._toggleItem,\n        style: [{\n          flex: 1,\n          flexDirection: 'row',\n          alignItems: 'center',\n          justifyContent: 'flex-start',\n          paddingVertical: 6\n        }, mergedStyles.subItem, (itemSelected || highlightChild) && mergedStyles.selectedItem, (itemSelected || highlightChild) && mergedStyles.selectedSubItem],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 9\n        }\n      }, selectedIconOnLeft && this._renderSelectedIcon(), iconKey && subItem[iconKey] && React.createElement(ItemIcon, {\n        iconRenderer: Icon,\n        iconKey: iconKey,\n        icon: subItem[iconKey],\n        style: mergedStyles.itemIconStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }\n      }), React.createElement(Text, {\n        numberOfLines: itemNumberOfLines,\n        style: [{\n          flex: 1,\n          color: subItem.disabled ? mergedColors.disabled : mergedColors.subText\n        }, subItemFontFamily, mergedStyles.subItemText, (itemSelected || highlightChild) && mergedStyles.selectedSubItemText],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }\n      }, subItem[displayKey]), !selectedIconOnLeft && this._renderSelectedIcon()));\n    }\n  }]);\n\n  return RowSubItem;\n}(Component);\n\nexport default RowSubItem;","map":{"version":3,"sources":["/Users/iShrusti/Documents/GitHub/Pharmacy_App/node_modules/react-native-sectioned-multi-select/lib/components/RowSubItem.js"],"names":["React","Component","PropTypes","ItemIcon","callIfFunction","RowSubItem","_itemSelected","props","subItem","uniqueKey","selectedItems","includes","_toggleItem","_toggleSubItem","_renderSelectedIcon","selectedIconComponent","unselectedIconComponent","mergedColors","selectChildren","highlightedChildren","icons","Icon","iconRenderer","highlightChild","itemSelected","color","disabled","success","paddingLeft","check","nextProps","highlightChildren","mergedStyles","subItemFontFamily","selectedIconOnLeft","itemNumberOfLines","displayKey","iconKey","flexDirection","flex","backgroundColor","subItemBackground","alignItems","justifyContent","paddingVertical","selectedItem","selectedSubItem","itemIconStyle","subText","subItemText","selectedSubItemText"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;;;AAEA,OAAOC,QAAP;AACA,SAASC,cAAT;;IAEMC,U;;;;;;;;;;;;;;;;UA8CJC,a,GAAgB,YAAM;AAAA,wBAC0B,MAAKC,KAD/B;AAAA,UACZC,OADY,eACZA,OADY;AAAA,UACHC,SADG,eACHA,SADG;AAAA,UACQC,aADR,eACQA,aADR;AAEpB,aAAOA,aAAa,CAACC,QAAd,CAAuBH,OAAO,CAACC,SAAD,CAA9B,CAAP;AACD,K;;UAEDG,W,GAAc,YAAM;AAAA,UACVJ,OADU,GACE,MAAKD,KADP,CACVC,OADU;;AAElB,YAAKD,KAAL,CAAWM,cAAX,CAA0BL,OAA1B;AACD,K;;UAEDM,mB,GAAsB,YAAM;AAAA,yBAWtB,MAAKP,KAXiB;AAAA,UAExBQ,qBAFwB,gBAExBA,qBAFwB;AAAA,UAGxBC,uBAHwB,gBAGxBA,uBAHwB;AAAA,UAIxBC,YAJwB,gBAIxBA,YAJwB;AAAA,UAKxBC,cALwB,gBAKxBA,cALwB;AAAA,UAMxBC,mBANwB,gBAMxBA,mBANwB;AAAA,UAOxBV,SAPwB,gBAOxBA,SAPwB;AAAA,UAQxBD,OARwB,gBAQxBA,OARwB;AAAA,UASxBY,KATwB,gBASxBA,KATwB;AAAA,UAUVC,IAVU,gBAUxBC,YAVwB;AAY1B,UAAMC,cAAc,GAClB,CAACL,cAAD,IAAmBC,mBAAmB,CAACR,QAApB,CAA6BH,OAAO,CAACC,SAAD,CAApC,CADrB;;AAEA,UAAMe,YAAY,GAAG,MAAKlB,aAAL,EAArB;;AACA,aAAOkB,YAAY,IAAID,cAAhB,GACL,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGR,qBAAqB,GACpBX,cAAc,CAACW,qBAAD,CADM,GAGpB,oBAAC,IAAD;AACE,QAAA,KAAK,EAAE;AACLU,UAAAA,KAAK,EAAEF,cAAc,GACjBN,YAAY,CAACS,QADI,GAEjBT,YAAY,CAACU,OAHZ;AAILC,UAAAA,WAAW,EAAE;AAJR;AADT,SAOMR,KAAK,CAACS,KAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJJ,CADK,GAgBHb,uBAAuB,GACzBZ,cAAc,CAACY,uBAAD,CADW,GAEvB,IAlBJ;AAmBD,K;;;;;;;0CAzFqBc,S,EAAW;AAC/B,UAAIA,SAAS,CAACpB,aAAV,KAA4B,KAAKH,KAAL,CAAWG,aAA3C,EAA0D;AACxD,YACE,KAAKH,KAAL,CAAWG,aAAX,CAAyBC,QAAzB,CACE,KAAKJ,KAAL,CAAWC,OAAX,CAAmB,KAAKD,KAAL,CAAWE,SAA9B,CADF,KAGA,CAACqB,SAAS,CAACpB,aAAV,CAAwBC,QAAxB,CACC,KAAKJ,KAAL,CAAWC,OAAX,CAAmB,KAAKD,KAAL,CAAWE,SAA9B,CADD,CAJH,EAOE;AACA,iBAAO,IAAP;AACD;;AACD,YACE,CAAC,KAAKF,KAAL,CAAWG,aAAX,CAAyBC,QAAzB,CACC,KAAKJ,KAAL,CAAWC,OAAX,CAAmB,KAAKD,KAAL,CAAWE,SAA9B,CADD,CAAD,IAGAqB,SAAS,CAACpB,aAAV,CAAwBC,QAAxB,CACE,KAAKJ,KAAL,CAAWC,OAAX,CAAmB,KAAKD,KAAL,CAAWE,SAA9B,CADF,CAJF,EAOE;AACA,iBAAO,IAAP;AACD;;AACD,YAAI,KAAKF,KAAL,CAAWwB,iBAAX,IAAgC,KAAKxB,KAAL,CAAWW,cAA/C,EAA+D;AAC7D,cACE,KAAKX,KAAL,CAAWY,mBAAX,CAA+BR,QAA/B,CACE,KAAKJ,KAAL,CAAWC,OAAX,CAAmB,KAAKD,KAAL,CAAWE,SAA9B,CADF,CADF,EAIE;AACA,mBAAO,IAAP;AACD;;AACD,cACEqB,SAAS,CAACX,mBAAV,CAA8BR,QAA9B,CACE,KAAKJ,KAAL,CAAWC,OAAX,CAAmB,KAAKD,KAAL,CAAWE,SAA9B,CADF,CADF,EAIE;AACA,mBAAO,IAAP;AACD;AACF;AACF;;AACD,UAAI,KAAKF,KAAL,CAAWyB,YAAX,KAA4BF,SAAS,CAACE,YAA1C,EAAwD;AACtD,eAAO,IAAP;AACD;;AACD,aAAO,KAAP;AACD;;;6BAgDQ;AAAA,yBAcH,KAAKzB,KAdF;AAAA,UAELyB,YAFK,gBAELA,YAFK;AAAA,UAGLf,YAHK,gBAGLA,YAHK;AAAA,UAILT,OAJK,gBAILA,OAJK;AAAA,UAKLC,SALK,gBAKLA,SALK;AAAA,UAMLwB,iBANK,gBAMLA,iBANK;AAAA,UAOLf,cAPK,gBAOLA,cAPK;AAAA,UAQLgB,kBARK,gBAQLA,kBARK;AAAA,UASLf,mBATK,gBASLA,mBATK;AAAA,UAULgB,iBAVK,gBAULA,iBAVK;AAAA,UAWLC,UAXK,gBAWLA,UAXK;AAAA,UAYLC,OAZK,gBAYLA,OAZK;AAAA,UAaShB,IAbT,gBAaLC,YAbK;AAgBP,UAAMC,cAAc,GAClB,CAACL,cAAD,IAAmBC,mBAAmB,CAACR,QAApB,CAA6BH,OAAO,CAACC,SAAD,CAApC,CADrB;;AAEA,UAAMe,YAAY,GAAG,KAAKlB,aAAL,EAArB;;AAEA,aACE,oBAAC,IAAD;AACE,QAAA,GAAG,EAAEE,OAAO,CAACC,SAAD,CADd;AAEE,QAAA,KAAK,EAAE;AACL6B,UAAAA,aAAa,EAAE,KADV;AAELC,UAAAA,IAAI,EAAE,CAFD;AAGLC,UAAAA,eAAe,EAAEvB,YAAY,CAACwB;AAHzB,SAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOE,oBAAC,gBAAD;AACE,QAAA,QAAQ,EAAElB,cAAc,IAAIf,OAAO,CAACkB,QADtC;AAEE,QAAA,OAAO,EAAE,KAAKd,WAFhB;AAGE,QAAA,KAAK,EAAE,CACL;AACE2B,UAAAA,IAAI,EAAE,CADR;AAEED,UAAAA,aAAa,EAAE,KAFjB;AAGEI,UAAAA,UAAU,EAAE,QAHd;AAIEC,UAAAA,cAAc,EAAE,YAJlB;AAKEC,UAAAA,eAAe,EAAE;AALnB,SADK,EAQLZ,YAAY,CAACxB,OARR,EASL,CAACgB,YAAY,IAAID,cAAjB,KAAoCS,YAAY,CAACa,YAT5C,EAUL,CAACrB,YAAY,IAAID,cAAjB,KAAoCS,YAAY,CAACc,eAV5C,CAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAeGZ,kBAAkB,IAAI,KAAKpB,mBAAL,EAfzB,EAiBGuB,OAAO,IAAI7B,OAAO,CAAC6B,OAAD,CAAlB,IACC,oBAAC,QAAD;AACE,QAAA,YAAY,EAAEhB,IADhB;AAEE,QAAA,OAAO,EAAEgB,OAFX;AAGE,QAAA,IAAI,EAAE7B,OAAO,CAAC6B,OAAD,CAHf;AAIE,QAAA,KAAK,EAAEL,YAAY,CAACe,aAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAlBJ,EAyBE,oBAAC,IAAD;AACE,QAAA,aAAa,EAAEZ,iBADjB;AAEE,QAAA,KAAK,EAAE,CACL;AACEI,UAAAA,IAAI,EAAE,CADR;AAEEd,UAAAA,KAAK,EAAEjB,OAAO,CAACkB,QAAR,GACHT,YAAY,CAACS,QADV,GAEHT,YAAY,CAAC+B;AAJnB,SADK,EAOLf,iBAPK,EAQLD,YAAY,CAACiB,WARR,EASL,CAACzB,YAAY,IAAID,cAAjB,KACES,YAAY,CAACkB,mBAVV,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAcG1C,OAAO,CAAC4B,UAAD,CAdV,CAzBF,EAyCG,CAACF,kBAAD,IAAuB,KAAKpB,mBAAL,EAzC1B,CAPF,CADF;AAqDD;;;;EArKsBb,S;;AAwKzB,eAAeI,UAAf","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { View, TouchableOpacity, Text, Image } from 'react-native'\nimport ItemIcon from './ItemIcon'\nimport { callIfFunction } from '../helpers'\n\nclass RowSubItem extends Component {\n  shouldComponentUpdate(nextProps) {\n    if (nextProps.selectedItems !== this.props.selectedItems) {\n      if (\n        this.props.selectedItems.includes(\n          this.props.subItem[this.props.uniqueKey]\n        ) &&\n        !nextProps.selectedItems.includes(\n          this.props.subItem[this.props.uniqueKey]\n        )\n      ) {\n        return true\n      }\n      if (\n        !this.props.selectedItems.includes(\n          this.props.subItem[this.props.uniqueKey]\n        ) &&\n        nextProps.selectedItems.includes(\n          this.props.subItem[this.props.uniqueKey]\n        )\n      ) {\n        return true\n      }\n      if (this.props.highlightChildren || this.props.selectChildren) {\n        if (\n          this.props.highlightedChildren.includes(\n            this.props.subItem[this.props.uniqueKey]\n          )\n        ) {\n          return true\n        }\n        if (\n          nextProps.highlightedChildren.includes(\n            this.props.subItem[this.props.uniqueKey]\n          )\n        ) {\n          return true\n        }\n      }\n    }\n    if (this.props.mergedStyles !== nextProps.mergedStyles) {\n      return true\n    }\n    return false\n  }\n\n  _itemSelected = () => {\n    const { subItem, uniqueKey, selectedItems } = this.props\n    return selectedItems.includes(subItem[uniqueKey])\n  }\n\n  _toggleItem = () => {\n    const { subItem } = this.props\n    this.props._toggleSubItem(subItem)\n  }\n\n  _renderSelectedIcon = () => {\n    const {\n      selectedIconComponent,\n      unselectedIconComponent,\n      mergedColors,\n      selectChildren,\n      highlightedChildren,\n      uniqueKey,\n      subItem,\n      icons,\n      iconRenderer: Icon\n    } = this.props\n    const highlightChild =\n      !selectChildren && highlightedChildren.includes(subItem[uniqueKey])\n    const itemSelected = this._itemSelected()\n    return itemSelected || highlightChild ? (\n      <View>\n        {selectedIconComponent ? (\n          callIfFunction(selectedIconComponent)\n        ) : (\n          <Icon\n            style={{\n              color: highlightChild\n                ? mergedColors.disabled\n                : mergedColors.success,\n              paddingLeft: 10\n            }}\n            {...icons.check}\n          />\n        )}\n      </View>\n    ) : unselectedIconComponent ? (\n      callIfFunction(unselectedIconComponent)\n    ) : null\n  }\n\n  render() {\n    const {\n      mergedStyles,\n      mergedColors,\n      subItem,\n      uniqueKey,\n      subItemFontFamily,\n      selectChildren,\n      selectedIconOnLeft,\n      highlightedChildren,\n      itemNumberOfLines,\n      displayKey,\n      iconKey,\n      iconRenderer: Icon\n    } = this.props\n\n    const highlightChild =\n      !selectChildren && highlightedChildren.includes(subItem[uniqueKey])\n    const itemSelected = this._itemSelected()\n\n    return (\n      <View\n        key={subItem[uniqueKey]}\n        style={{\n          flexDirection: 'row',\n          flex: 1,\n          backgroundColor: mergedColors.subItemBackground\n        }}>\n        <TouchableOpacity\n          disabled={highlightChild || subItem.disabled}\n          onPress={this._toggleItem}\n          style={[\n            {\n              flex: 1,\n              flexDirection: 'row',\n              alignItems: 'center',\n              justifyContent: 'flex-start',\n              paddingVertical: 6\n            },\n            mergedStyles.subItem,\n            (itemSelected || highlightChild) && mergedStyles.selectedItem,\n            (itemSelected || highlightChild) && mergedStyles.selectedSubItem\n          ]}>\n          {selectedIconOnLeft && this._renderSelectedIcon()}\n\n          {iconKey && subItem[iconKey] && (\n            <ItemIcon\n              iconRenderer={Icon}\n              iconKey={iconKey}\n              icon={subItem[iconKey]}\n              style={mergedStyles.itemIconStyle}\n            />\n          )}\n          <Text\n            numberOfLines={itemNumberOfLines}\n            style={[\n              {\n                flex: 1,\n                color: subItem.disabled\n                  ? mergedColors.disabled\n                  : mergedColors.subText\n              },\n              subItemFontFamily,\n              mergedStyles.subItemText,\n              (itemSelected || highlightChild) &&\n                mergedStyles.selectedSubItemText\n            ]}>\n            {subItem[displayKey]}\n          </Text>\n          {!selectedIconOnLeft && this._renderSelectedIcon()}\n        </TouchableOpacity>\n      </View>\n    )\n  }\n}\n\nexport default RowSubItem\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { Easing } from \"./Easing\";\nimport NativeReanimated from \"./NativeReanimated\";\nvar IN_STYLE_UPDATER = false;\n\nvar assertNumber = function assertNumber(value, callerName) {\n  'worklet';\n\n  var valueType = typeof value;\n\n  if (valueType !== 'number') {\n    var error = \"invalid type of toValue passed to \" + callerName + \", expected `number`, got `\" + valueType + \"`\";\n\n    if (valueType === 'object') {\n      error += ', maybe you forgot to add `.value`?';\n    }\n\n    throw new Error(error);\n  }\n};\n\nexport function initialUpdaterRun(updater) {\n  IN_STYLE_UPDATER = true;\n  var result = updater();\n  IN_STYLE_UPDATER = false;\n  return result;\n}\n\nfunction defineAnimation(starting, factory) {\n  'worklet';\n\n  if (IN_STYLE_UPDATER) {\n    return starting;\n  }\n\n  if (_WORKLET || !NativeReanimated.native) {\n    return factory();\n  }\n\n  return factory;\n}\n\nexport function cancelAnimation(sharedValue) {\n  'worklet';\n\n  sharedValue.value = sharedValue.value;\n}\nexport function withTiming(toValue, userConfig, callback) {\n  'worklet';\n\n  assertNumber(toValue, 'withTiming');\n  return defineAnimation(toValue, function () {\n    'worklet';\n\n    var config = {\n      duration: 300,\n      easing: Easing.inOut(Easing.quad)\n    };\n\n    if (userConfig) {\n      Object.keys(userConfig).forEach(function (key) {\n        return config[key] = userConfig[key];\n      });\n    }\n\n    function timing(animation, now) {\n      var toValue = animation.toValue,\n          progress = animation.progress,\n          startTime = animation.startTime,\n          current = animation.current;\n      var runtime = now - startTime;\n\n      if (runtime >= config.duration) {\n        animation.startTime = 0;\n        animation.current = toValue;\n        return true;\n      }\n\n      var newProgress = config.easing(runtime / config.duration);\n      var dist = (toValue - current) * (newProgress - progress) / (1 - progress);\n      animation.current += dist;\n      animation.progress = newProgress;\n      return false;\n    }\n\n    function start(animation, value, now, previousAnimation) {\n      if (previousAnimation && previousAnimation.type === 'timing' && previousAnimation.toValue === toValue && previousAnimation.startTime) {\n        animation.startTime = previousAnimation.startTime;\n        animation.progress = previousAnimation.progress;\n      } else {\n        animation.startTime = now;\n        animation.progress = 0;\n      }\n\n      animation.current = value;\n    }\n\n    return {\n      type: 'timing',\n      animation: timing,\n      start: start,\n      progress: 0,\n      toValue: toValue,\n      current: toValue,\n      callback: callback\n    };\n  });\n}\nexport function withSpring(toValue, userConfig, callback) {\n  'worklet';\n\n  assertNumber(toValue, 'withSpring');\n  return defineAnimation(toValue, function () {\n    'worklet';\n\n    var config = {\n      damping: 10,\n      mass: 1,\n      stiffness: 100,\n      overshootClamping: false,\n      restDisplacementThreshold: 0.001,\n      restSpeedThreshold: 0.001\n    };\n\n    if (userConfig) {\n      Object.keys(userConfig).forEach(function (key) {\n        return config[key] = userConfig[key];\n      });\n    }\n\n    function spring(animation, now) {\n      var toValue = animation.toValue,\n          lastTimestamp = animation.lastTimestamp,\n          current = animation.current,\n          velocity = animation.velocity;\n      var deltaTime = Math.min(now - lastTimestamp, 64);\n      animation.lastTimestamp = now;\n      var c = config.damping;\n      var m = config.mass;\n      var k = config.stiffness;\n      var v0 = -velocity;\n      var x0 = toValue - current;\n      var zeta = c / (2 * Math.sqrt(k * m));\n      var omega0 = Math.sqrt(k / m);\n      var omega1 = omega0 * Math.sqrt(1 - Math.pow(zeta, 2));\n      var t = deltaTime / 1000;\n      var sin1 = Math.sin(omega1 * t);\n      var cos1 = Math.cos(omega1 * t);\n      var underDampedEnvelope = Math.exp(-zeta * omega0 * t);\n      var underDampedFrag1 = underDampedEnvelope * (sin1 * ((v0 + zeta * omega0 * x0) / omega1) + x0 * cos1);\n      var underDampedPosition = toValue - underDampedFrag1;\n      var underDampedVelocity = zeta * omega0 * underDampedFrag1 - underDampedEnvelope * (cos1 * (v0 + zeta * omega0 * x0) - omega1 * x0 * sin1);\n      var criticallyDampedEnvelope = Math.exp(-omega0 * t);\n      var criticallyDampedPosition = toValue - criticallyDampedEnvelope * (x0 + (v0 + omega0 * x0) * t);\n      var criticallyDampedVelocity = criticallyDampedEnvelope * (v0 * (t * omega0 - 1) + t * x0 * omega0 * omega0);\n\n      var isOvershooting = function isOvershooting() {\n        if (config.overshootClamping && config.stiffness !== 0) {\n          return current < toValue ? animation.current > toValue : animation.current < toValue;\n        } else {\n          return false;\n        }\n      };\n\n      var isVelocity = Math.abs(velocity) < config.restSpeedThreshold;\n      var isDisplacement = config.stiffness === 0 || Math.abs(toValue - current) < config.restDisplacementThreshold;\n\n      if (zeta < 1) {\n        animation.current = underDampedPosition;\n        animation.velocity = underDampedVelocity;\n      } else {\n        animation.current = criticallyDampedPosition;\n        animation.velocity = criticallyDampedVelocity;\n      }\n\n      if (isOvershooting() || isVelocity && isDisplacement) {\n        if (config.stiffness !== 0) {\n          animation.velocity = 0;\n          animation.current = toValue;\n        }\n\n        return true;\n      }\n    }\n\n    function start(animation, value, now, previousAnimation) {\n      animation.current = value;\n\n      if (previousAnimation) {\n        animation.velocity = previousAnimation.velocity || animation.velocity || 0;\n        animation.lastTimestamp = previousAnimation.lastTimestamp || now;\n      } else {\n        animation.lastTimestamp = now;\n      }\n    }\n\n    return {\n      animation: spring,\n      start: start,\n      toValue: toValue,\n      velocity: config.velocity || 0,\n      current: toValue,\n      callback: callback\n    };\n  });\n}\nexport function withDecay(userConfig, callback) {\n  'worklet';\n\n  return defineAnimation(0, function () {\n    'worklet';\n\n    var config = {\n      deceleration: 0.998\n    };\n\n    if (userConfig) {\n      Object.keys(userConfig).forEach(function (key) {\n        return config[key] = userConfig[key];\n      });\n    }\n\n    var VELOCITY_EPS = 5;\n\n    function decay(animation, now) {\n      var lastTimestamp = animation.lastTimestamp,\n          initialVelocity = animation.initialVelocity,\n          current = animation.current,\n          velocity = animation.velocity;\n      var deltaTime = Math.min(now - lastTimestamp, 64);\n      animation.lastTimestamp = now;\n      var kv = Math.pow(config.deceleration, deltaTime);\n      var kx = config.deceleration * (1 - kv) / (1 - config.deceleration);\n      var v0 = velocity / 1000;\n      var v = v0 * kv * 1000;\n      var x = current + v0 * kx;\n      animation.current = x;\n      animation.velocity = v;\n      var toValueIsReached = null;\n\n      if (Array.isArray(config.clamp)) {\n        if (initialVelocity < 0 && animation.current <= config.clamp[0]) {\n          toValueIsReached = config.clamp[0];\n        } else if (initialVelocity > 0 && animation.current >= config.clamp[1]) {\n          toValueIsReached = config.clamp[1];\n        }\n      }\n\n      if (Math.abs(v) < VELOCITY_EPS || toValueIsReached !== null) {\n        if (toValueIsReached !== null) {\n          animation.current = toValueIsReached;\n        }\n\n        return true;\n      }\n    }\n\n    function start(animation, value, now) {\n      animation.current = value;\n      animation.lastTimestamp = now;\n      animation.initialVelocity = config.velocity;\n    }\n\n    return {\n      animation: decay,\n      start: start,\n      velocity: config.velocity || 0,\n      callback: callback\n    };\n  });\n}\nexport function delay(delayMs, _nextAnimation) {\n  'worklet';\n\n  return defineAnimation(_nextAnimation, function () {\n    'worklet';\n\n    var nextAnimation = typeof _nextAnimation === 'function' ? _nextAnimation() : _nextAnimation;\n\n    function delay(animation, now) {\n      var startTime = animation.startTime,\n          started = animation.started,\n          previousAnimation = animation.previousAnimation;\n\n      if (now - startTime > delayMs) {\n        if (!started) {\n          nextAnimation.start(nextAnimation, animation.current, now, previousAnimation);\n          animation.previousAnimation = null;\n          animation.started = true;\n        }\n\n        var finished = nextAnimation.animation(nextAnimation, now);\n        animation.current = nextAnimation.current;\n        return finished;\n      } else if (previousAnimation) {\n        var _finished = previousAnimation.animation(previousAnimation, now);\n\n        animation.current = previousAnimation.current;\n\n        if (_finished) {\n          animation.previousAnimation = null;\n        }\n      }\n\n      return false;\n    }\n\n    function start(animation, value, now, previousAnimation) {\n      animation.startTime = now;\n      animation.started = false;\n      animation.current = value;\n      animation.previousAnimation = previousAnimation;\n    }\n\n    var callback = function callback(finished) {\n      if (nextAnimation.callback) {\n        nextAnimation.callback(finished);\n      }\n    };\n\n    return {\n      animation: delay,\n      start: start,\n      current: nextAnimation.current,\n      callback: callback\n    };\n  });\n}\nexport function sequence() {\n  'worklet';\n\n  for (var _len = arguments.length, _animations = new Array(_len), _key = 0; _key < _len; _key++) {\n    _animations[_key] = arguments[_key];\n  }\n\n  return defineAnimation(_animations[0], function () {\n    'worklet';\n\n    var animations = _animations.map(function (a) {\n      var result = typeof a === 'function' ? a() : a;\n      result.finished = false;\n      return result;\n    });\n\n    var firstAnimation = animations[0];\n\n    var callback = function callback(finished) {\n      if (finished) {\n        return;\n      }\n\n      animations.forEach(function (animation) {\n        if (typeof animation.callback === 'function' && !animation.finished) {\n          animation.callback(finished);\n        }\n      });\n    };\n\n    function sequence(animation, now) {\n      var currentAnim = animations[animation.animationIndex];\n      var finished = currentAnim.animation(currentAnim, now);\n      animation.current = currentAnim.current;\n\n      if (finished) {\n        if (currentAnim.callback) {\n          currentAnim.callback(true);\n        }\n\n        currentAnim.finished = true;\n        animation.animationIndex += 1;\n\n        if (animation.animationIndex < animations.length) {\n          var nextAnim = animations[animation.animationIndex];\n          nextAnim.start(nextAnim, currentAnim.current, now, currentAnim);\n          return false;\n        }\n\n        return true;\n      }\n\n      return false;\n    }\n\n    function start(animation, value, now, previousAnimation) {\n      animation.animationIndex = 0;\n      firstAnimation.start(firstAnimation, value, now, previousAnimation);\n    }\n\n    return {\n      animation: sequence,\n      start: start,\n      animationIndex: 0,\n      current: firstAnimation.current,\n      callback: callback\n    };\n  });\n}\nexport function repeat(_nextAnimation) {\n  'worklet';\n\n  var numberOfReps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n  var reverse = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var callback = arguments.length > 3 ? arguments[3] : undefined;\n  return defineAnimation(_nextAnimation, function () {\n    'worklet';\n\n    var nextAnimation = typeof _nextAnimation === 'function' ? _nextAnimation() : _nextAnimation;\n\n    function repeat(animation, now) {\n      var finished = nextAnimation.animation(nextAnimation, now);\n      animation.current = nextAnimation.current;\n\n      if (finished) {\n        animation.reps += 1;\n\n        if (nextAnimation.callback) {\n          nextAnimation.callback(true, animation.current);\n        }\n\n        if (numberOfReps > 0 && animation.reps >= numberOfReps) {\n          return true;\n        }\n\n        var startValue = reverse ? nextAnimation.current : animation.startValue;\n\n        if (reverse) {\n          nextAnimation.toValue = animation.startValue;\n          animation.startValue = startValue;\n        }\n\n        nextAnimation.start(nextAnimation, startValue, now, nextAnimation);\n        return false;\n      }\n\n      return false;\n    }\n\n    var repCallback = function repCallback(finished) {\n      if (callback) {\n        callback(finished);\n      }\n\n      if (!finished && nextAnimation.callback) {\n        nextAnimation.callback(false);\n      }\n    };\n\n    function start(animation, value, now, previousAnimation) {\n      animation.startValue = value;\n      animation.reps = 0;\n      nextAnimation.start(nextAnimation, value, now, previousAnimation);\n    }\n\n    return {\n      animation: repeat,\n      start: start,\n      reps: 0,\n      current: nextAnimation.current,\n      callback: repCallback\n    };\n  });\n}\nexport function loop(nextAnimation) {\n  'worklet';\n\n  var numberOfLoops = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  console.warn('Method `loop` is deprecated. Please use `repeat` instead');\n  return repeat(nextAnimation, Math.round(numberOfLoops * 2), true);\n}","map":{"version":3,"sources":["/Users/iShrusti/Documents/GitHub/Pharmacy_App/node_modules/react-native-reanimated/src/reanimated2/animations.js"],"names":["Easing","NativeReanimated","IN_STYLE_UPDATER","assertNumber","value","callerName","valueType","error","Error","initialUpdaterRun","updater","result","defineAnimation","starting","factory","_WORKLET","native","cancelAnimation","sharedValue","withTiming","toValue","userConfig","callback","config","duration","easing","inOut","quad","Object","keys","forEach","key","timing","animation","now","progress","startTime","current","runtime","newProgress","dist","start","previousAnimation","type","withSpring","damping","mass","stiffness","overshootClamping","restDisplacementThreshold","restSpeedThreshold","spring","lastTimestamp","velocity","deltaTime","Math","min","c","m","k","v0","x0","zeta","sqrt","omega0","omega1","t","sin1","sin","cos1","cos","underDampedEnvelope","exp","underDampedFrag1","underDampedPosition","underDampedVelocity","criticallyDampedEnvelope","criticallyDampedPosition","criticallyDampedVelocity","isOvershooting","isVelocity","abs","isDisplacement","withDecay","deceleration","VELOCITY_EPS","decay","initialVelocity","kv","pow","kx","v","x","toValueIsReached","Array","isArray","clamp","delay","delayMs","_nextAnimation","nextAnimation","started","finished","sequence","_animations","animations","map","a","firstAnimation","currentAnim","animationIndex","length","nextAnim","repeat","numberOfReps","reverse","reps","startValue","repCallback","loop","numberOfLoops","console","warn","round"],"mappings":"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","sourcesContent":["/* global _WORKLET */\nimport { Easing } from './Easing';\nimport NativeReanimated from './NativeReanimated';\n\nlet IN_STYLE_UPDATER = false;\n\nconst assertNumber = (value, callerName) => {\n  'worklet'\n  const valueType = typeof value;\n  if (valueType !== 'number') {\n    let error = `invalid type of toValue passed to ${callerName}, expected \\`number\\`, got \\`${valueType}\\``;\n    if (valueType === 'object') {\n      error += ', maybe you forgot to add `.value`?';\n    }\n    throw new Error(error);\n  }\n};\n\nexport function initialUpdaterRun(updater) {\n  IN_STYLE_UPDATER = true;\n  const result = updater();\n  IN_STYLE_UPDATER = false;\n  return result;\n}\n\nfunction defineAnimation(starting, factory) {\n  'worklet';\n  if (IN_STYLE_UPDATER) {\n    return starting;\n  }\n  if (_WORKLET || !NativeReanimated.native) {\n    return factory();\n  }\n  return factory;\n}\n\nexport function cancelAnimation(sharedValue) {\n  'worklet';\n  // setting the current value cancels the animation if one is currently running\n  sharedValue.value = sharedValue.value; // eslint-disable-line no-self-assign\n}\n\nexport function withTiming(toValue, userConfig, callback) {\n  'worklet';\n  // check toValue\n  assertNumber(toValue, 'withTiming');\n\n  return defineAnimation(toValue, () => {\n    'worklet';\n    const config = {\n      duration: 300,\n      easing: Easing.inOut(Easing.quad),\n    };\n    if (userConfig) {\n      Object.keys(userConfig).forEach((key) => (config[key] = userConfig[key]));\n    }\n\n    function timing(animation, now) {\n      const { toValue, progress, startTime, current } = animation;\n\n      const runtime = now - startTime;\n\n      if (runtime >= config.duration) {\n        // reset startTime to avoid reusing finished animation config in `start` method\n        animation.startTime = 0;\n        animation.current = toValue;\n        return true;\n      }\n\n      const newProgress = config.easing(runtime / config.duration);\n\n      const dist =\n        ((toValue - current) * (newProgress - progress)) / (1 - progress);\n      animation.current += dist;\n      animation.progress = newProgress;\n      return false;\n    }\n\n    function start(animation, value, now, previousAnimation) {\n      if (\n        previousAnimation &&\n        previousAnimation.type === 'timing' &&\n        previousAnimation.toValue === toValue &&\n        previousAnimation.startTime\n      ) {\n        // to maintain continuity of timing animations we check if we are starting\n        // new timing over the old one with the same parameters. If so, we want\n        // to copy animation timeline properties\n        animation.startTime = previousAnimation.startTime;\n        animation.progress = previousAnimation.progress;\n      } else {\n        animation.startTime = now;\n        animation.progress = 0;\n      }\n      animation.current = value;\n    }\n\n    return {\n      type: 'timing',\n      animation: timing,\n      start,\n      progress: 0,\n      toValue,\n      current: toValue,\n      callback,\n    };\n  });\n}\n\nexport function withSpring(toValue, userConfig, callback) {\n  'worklet';\n  // check toValue\n  assertNumber(toValue, 'withSpring');\n\n  return defineAnimation(toValue, () => {\n    'worklet';\n\n    // TODO: figure out why we can't use spread or Object.assign here\n    // when user config is \"frozen object\" we can't enumerate it (perhaps\n    // something is wrong with the object prototype).\n    const config = {\n      damping: 10,\n      mass: 1,\n      stiffness: 100,\n      overshootClamping: false,\n      restDisplacementThreshold: 0.001,\n      restSpeedThreshold: 0.001,\n    };\n    if (userConfig) {\n      Object.keys(userConfig).forEach((key) => (config[key] = userConfig[key]));\n    }\n\n    function spring(animation, now) {\n      const { toValue, lastTimestamp, current, velocity } = animation;\n\n      const deltaTime = Math.min(now - lastTimestamp, 64);\n      animation.lastTimestamp = now;\n\n      const c = config.damping;\n      const m = config.mass;\n      const k = config.stiffness;\n\n      const v0 = -velocity;\n      const x0 = toValue - current;\n\n      const zeta = c / (2 * Math.sqrt(k * m)); // damping ratio\n      const omega0 = Math.sqrt(k / m); // undamped angular frequency of the oscillator (rad/ms)\n      const omega1 = omega0 * Math.sqrt(1 - zeta ** 2); // exponential decay\n\n      const t = deltaTime / 1000;\n\n      const sin1 = Math.sin(omega1 * t);\n      const cos1 = Math.cos(omega1 * t);\n\n      // under damped\n      const underDampedEnvelope = Math.exp(-zeta * omega0 * t);\n      const underDampedFrag1 =\n        underDampedEnvelope *\n        (sin1 * ((v0 + zeta * omega0 * x0) / omega1) + x0 * cos1);\n\n      const underDampedPosition = toValue - underDampedFrag1;\n      // This looks crazy -- it's actually just the derivative of the oscillation function\n      const underDampedVelocity =\n        zeta * omega0 * underDampedFrag1 -\n        underDampedEnvelope *\n          (cos1 * (v0 + zeta * omega0 * x0) - omega1 * x0 * sin1);\n\n      // critically damped\n      const criticallyDampedEnvelope = Math.exp(-omega0 * t);\n      const criticallyDampedPosition =\n        toValue - criticallyDampedEnvelope * (x0 + (v0 + omega0 * x0) * t);\n\n      const criticallyDampedVelocity =\n        criticallyDampedEnvelope *\n        (v0 * (t * omega0 - 1) + t * x0 * omega0 * omega0);\n\n      const isOvershooting = () => {\n        if (config.overshootClamping && config.stiffness !== 0) {\n          return current < toValue\n            ? animation.current > toValue\n            : animation.current < toValue;\n        } else {\n          return false;\n        }\n      };\n\n      const isVelocity = Math.abs(velocity) < config.restSpeedThreshold;\n      const isDisplacement =\n        config.stiffness === 0 ||\n        Math.abs(toValue - current) < config.restDisplacementThreshold;\n\n      if (zeta < 1) {\n        animation.current = underDampedPosition;\n        animation.velocity = underDampedVelocity;\n      } else {\n        animation.current = criticallyDampedPosition;\n        animation.velocity = criticallyDampedVelocity;\n      }\n\n      if (isOvershooting() || (isVelocity && isDisplacement)) {\n        if (config.stiffness !== 0) {\n          animation.velocity = 0;\n          animation.current = toValue;\n        }\n        return true;\n      }\n    }\n\n    function start(animation, value, now, previousAnimation) {\n      animation.current = value;\n      if (previousAnimation) {\n        animation.velocity =\n          previousAnimation.velocity || animation.velocity || 0;\n        animation.lastTimestamp = previousAnimation.lastTimestamp || now;\n      } else {\n        animation.lastTimestamp = now;\n      }\n    }\n\n    return {\n      animation: spring,\n      start,\n      toValue,\n      velocity: config.velocity || 0,\n      current: toValue,\n      callback,\n    };\n  });\n}\n\nexport function withDecay(userConfig, callback) {\n  'worklet';\n  return defineAnimation(0, () => {\n    'worklet';\n    const config = {\n      deceleration: 0.998,\n    };\n    if (userConfig) {\n      Object.keys(userConfig).forEach((key) => (config[key] = userConfig[key]));\n    }\n\n    const VELOCITY_EPS = 5;\n\n    function decay(animation, now) {\n      const { lastTimestamp, initialVelocity, current, velocity } = animation;\n\n      const deltaTime = Math.min(now - lastTimestamp, 64);\n      animation.lastTimestamp = now;\n\n      const kv = Math.pow(config.deceleration, deltaTime);\n      const kx = (config.deceleration * (1 - kv)) / (1 - config.deceleration);\n\n      const v0 = velocity / 1000;\n      const v = v0 * kv * 1000;\n      const x = current + v0 * kx;\n\n      animation.current = x;\n      animation.velocity = v;\n\n      let toValueIsReached = null;\n\n      if (Array.isArray(config.clamp)) {\n        if (initialVelocity < 0 && animation.current <= config.clamp[0]) {\n          toValueIsReached = config.clamp[0];\n        } else if (\n          initialVelocity > 0 &&\n          animation.current >= config.clamp[1]\n        ) {\n          toValueIsReached = config.clamp[1];\n        }\n      }\n\n      if (Math.abs(v) < VELOCITY_EPS || toValueIsReached !== null) {\n        if (toValueIsReached !== null) {\n          animation.current = toValueIsReached;\n        }\n\n        return true;\n      }\n    }\n\n    function start(animation, value, now) {\n      animation.current = value;\n      animation.lastTimestamp = now;\n      animation.initialVelocity = config.velocity;\n    }\n\n    return {\n      animation: decay,\n      start,\n      velocity: config.velocity || 0,\n      callback,\n    };\n  });\n}\n\nexport function delay(delayMs, _nextAnimation) {\n  'worklet';\n  return defineAnimation(_nextAnimation, () => {\n    'worklet';\n\n    const nextAnimation =\n      typeof _nextAnimation === 'function' ? _nextAnimation() : _nextAnimation;\n\n    function delay(animation, now) {\n      const { startTime, started, previousAnimation } = animation;\n\n      if (now - startTime > delayMs) {\n        if (!started) {\n          nextAnimation.start(\n            nextAnimation,\n            animation.current,\n            now,\n            previousAnimation\n          );\n          animation.previousAnimation = null;\n          animation.started = true;\n        }\n        const finished = nextAnimation.animation(nextAnimation, now);\n        animation.current = nextAnimation.current;\n        return finished;\n      } else if (previousAnimation) {\n        const finished = previousAnimation.animation(previousAnimation, now);\n        animation.current = previousAnimation.current;\n        if (finished) {\n          animation.previousAnimation = null;\n        }\n      }\n      return false;\n    }\n\n    function start(animation, value, now, previousAnimation) {\n      animation.startTime = now;\n      animation.started = false;\n      animation.current = value;\n      animation.previousAnimation = previousAnimation;\n    }\n\n    const callback = (finished) => {\n      if (nextAnimation.callback) {\n        nextAnimation.callback(finished);\n      }\n    };\n\n    return {\n      animation: delay,\n      start,\n      current: nextAnimation.current,\n      callback,\n    };\n  });\n}\n\nexport function sequence(..._animations) {\n  'worklet';\n  return defineAnimation(_animations[0], () => {\n    'worklet';\n    const animations = _animations.map((a) => {\n      const result = typeof a === 'function' ? a() : a;\n      result.finished = false;\n      return result;\n    });\n    const firstAnimation = animations[0];\n\n    const callback = (finished) => {\n      if (finished) {\n        // we want to call the callback after every single animation\n        // not after all of them\n        return;\n      }\n      // this is going to be called only if sequence has been cancelled\n      animations.forEach((animation) => {\n        if (typeof animation.callback === 'function' && !animation.finished) {\n          animation.callback(finished);\n        }\n      });\n    };\n\n    function sequence(animation, now) {\n      const currentAnim = animations[animation.animationIndex];\n      const finished = currentAnim.animation(currentAnim, now);\n      animation.current = currentAnim.current;\n      if (finished) {\n        // we want to call the callback after every single animation\n        if (currentAnim.callback) {\n          currentAnim.callback(true /* finished */);\n        }\n        currentAnim.finished = true;\n        animation.animationIndex += 1;\n        if (animation.animationIndex < animations.length) {\n          const nextAnim = animations[animation.animationIndex];\n          nextAnim.start(nextAnim, currentAnim.current, now, currentAnim);\n          return false;\n        }\n        return true;\n      }\n      return false;\n    }\n\n    function start(animation, value, now, previousAnimation) {\n      animation.animationIndex = 0;\n      firstAnimation.start(firstAnimation, value, now, previousAnimation);\n    }\n\n    return {\n      animation: sequence,\n      start,\n      animationIndex: 0,\n      current: firstAnimation.current,\n      callback,\n    };\n  });\n}\n\nexport function repeat(\n  _nextAnimation,\n  numberOfReps = 2,\n  reverse = false,\n  callback\n) {\n  'worklet';\n  return defineAnimation(_nextAnimation, () => {\n    'worklet';\n\n    const nextAnimation =\n      typeof _nextAnimation === 'function' ? _nextAnimation() : _nextAnimation;\n\n    function repeat(animation, now) {\n      const finished = nextAnimation.animation(nextAnimation, now);\n      animation.current = nextAnimation.current;\n      if (finished) {\n        animation.reps += 1;\n        // call inner animation's callback on every repetition\n        // as the second argument the animation's current value is passed\n        if (nextAnimation.callback) {\n          nextAnimation.callback(true /* finished */, animation.current);\n        }\n        if (numberOfReps > 0 && animation.reps >= numberOfReps) {\n          return true;\n        }\n\n        const startValue = reverse\n          ? nextAnimation.current\n          : animation.startValue;\n        if (reverse) {\n          nextAnimation.toValue = animation.startValue;\n          animation.startValue = startValue;\n        }\n        nextAnimation.start(nextAnimation, startValue, now, nextAnimation);\n        return false;\n      }\n      return false;\n    }\n\n    const repCallback = (finished) => {\n      if (callback) {\n        callback(finished);\n      }\n      // when cancelled call inner animation's callback\n      if (!finished && nextAnimation.callback) {\n        nextAnimation.callback(false /* finished */);\n      }\n    };\n\n    function start(animation, value, now, previousAnimation) {\n      animation.startValue = value;\n      animation.reps = 0;\n      nextAnimation.start(nextAnimation, value, now, previousAnimation);\n    }\n\n    return {\n      animation: repeat,\n      start,\n      reps: 0,\n      current: nextAnimation.current,\n      callback: repCallback,\n    };\n  });\n}\n\n/* Deprecated, kept for backward compatibility. Will be removed soon */\nexport function loop(nextAnimation, numberOfLoops = 1) {\n  'worklet';\n  console.warn('Method `loop` is deprecated. Please use `repeat` instead');\n  return repeat(nextAnimation, Math.round(numberOfLoops * 2), true);\n}\n"]},"metadata":{},"sourceType":"module"}
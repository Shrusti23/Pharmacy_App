{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/iShrusti/Documents/GitHub/Pharmacy_App/node_modules/react-native-sectioned-multi-select/lib/components/RowItem.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport UIManager from \"react-native-web/dist/exports/UIManager\";\nimport LayoutAnimation from \"react-native-web/dist/exports/LayoutAnimation\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport RowSubItem from \"./RowSubItem\";\nimport ItemIcon from \"./ItemIcon\";\nimport { callIfFunction } from \"../helpers\";\n\nvar RowItem = function (_Component) {\n  _inherits(RowItem, _Component);\n\n  var _super = _createSuper(RowItem);\n\n  function RowItem(props) {\n    var _this;\n\n    _classCallCheck(this, RowItem);\n\n    _this = _super.call(this, props);\n\n    _this._itemSelected = function (item) {\n      var _this$props = _this.props,\n          uniqueKey = _this$props.uniqueKey,\n          selectedItems = _this$props.selectedItems;\n      return selectedItems.includes(item[uniqueKey]);\n    };\n\n    _this._toggleItem = function (item, hasChildren) {\n      _this.props._toggleItem(item, hasChildren);\n    };\n\n    _this._toggleSubItem = function (item) {\n      var uniqueKey = _this.props.uniqueKey;\n      var subToggled = _this.state.subToggled;\n\n      if (subToggled === item[uniqueKey]) {\n        _this.setState({\n          subToggled: false\n        });\n      } else {\n        _this.setState({\n          subToggled: item[uniqueKey]\n        });\n      }\n\n      _this.props._toggleItem(item, false);\n    };\n\n    _this._expandDropDowns = function () {\n      var expandDropDowns = _this.props.expandDropDowns;\n\n      if (expandDropDowns) {\n        _this.setState({\n          showSubCategories: true\n        });\n      }\n    };\n\n    _this._toggleDropDown = function () {\n      var _this$props2 = _this.props,\n          customLayoutAnimation = _this$props2.customLayoutAnimation,\n          animateDropDowns = _this$props2.animateDropDowns;\n      var animation = customLayoutAnimation || LayoutAnimation.Presets.easeInEaseOut;\n      animateDropDowns && LayoutAnimation.configureNext(animation);\n\n      _this.setState({\n        showSubCategories: !_this.state.showSubCategories\n      });\n    };\n\n    _this._showSubCategoryDropDown = function () {\n      var _this$props3 = _this.props,\n          showDropDowns = _this$props3.showDropDowns,\n          searchTerm = _this$props3.searchTerm;\n\n      if (searchTerm.length) {\n        return true;\n      }\n\n      if (showDropDowns) {\n        return _this.state.showSubCategories;\n      }\n\n      return true;\n    };\n\n    _this._dropDownOrToggle = function () {\n      var _this$props4 = _this.props,\n          readOnlyHeadings = _this$props4.readOnlyHeadings,\n          showDropDowns = _this$props4.showDropDowns,\n          uniqueKey = _this$props4.uniqueKey,\n          subKey = _this$props4.subKey,\n          item = _this$props4.item;\n      var hasChildren = !!(item[subKey] && item[subKey].length);\n\n      if (readOnlyHeadings && item[subKey] && showDropDowns) {\n        _this._toggleDropDown();\n      } else if (readOnlyHeadings) {} else {\n        _this._toggleItem(item, hasChildren);\n      }\n    };\n\n    _this._renderSubItemFlatList = function (_ref) {\n      var item = _ref.item;\n      return React.createElement(RowSubItem, _extends({\n        _toggleSubItem: _this._toggleSubItem,\n        subItem: item,\n        highlightedChildren: _this.props.highlightedChildren\n      }, _this.props, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 5\n        }\n      }));\n    };\n\n    _this._renderSubSeparator = function () {\n      return React.createElement(View, {\n        style: [{\n          flex: 1,\n          height: StyleSheet.hairlineWidth,\n          alignSelf: 'stretch',\n          backgroundColor: '#dadada'\n        }, _this.props.mergedStyles.subSeparator],\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 5\n        }\n      });\n    };\n\n    _this._renderSelectedIcon = function () {\n      var _this$props5 = _this.props,\n          item = _this$props5.item,\n          icons = _this$props5.icons,\n          selectedIconComponent = _this$props5.selectedIconComponent,\n          mergedColors = _this$props5.mergedColors,\n          unselectedIconComponent = _this$props5.unselectedIconComponent,\n          Icon = _this$props5.iconRenderer;\n      return _this._itemSelected(item) ? callIfFunction(selectedIconComponent) || React.createElement(Icon, _extends({\n        style: {\n          color: mergedColors.success,\n          paddingLeft: 10\n        }\n      }, icons.check, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }\n      })) : callIfFunction(unselectedIconComponent) || null;\n    };\n\n    if (Platform.OS === 'android') {\n      UIManager.setLayoutAnimationEnabledExperimental && UIManager.setLayoutAnimationEnabledExperimental(true);\n    }\n\n    _this.state = {\n      showSubCategories: false,\n      subToggled: null\n    };\n    return _this;\n  }\n\n  _createClass(RowItem, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._expandDropDowns();\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      var _this2 = this;\n\n      if (nextProps.selectedItems !== this.props.selectedItems) {\n        if (this.props.selectedItems.includes(this.props.item[this.props.uniqueKey]) && !nextProps.selectedItems.includes(this.props.item[this.props.uniqueKey])) {\n          return true;\n        }\n\n        if (!this.props.selectedItems.includes(this.props.item[this.props.uniqueKey]) && nextProps.selectedItems.includes(this.props.item[this.props.uniqueKey])) {\n          return true;\n        }\n\n        if (this.state.subToggled !== nextState.subToggled) {\n          return true;\n        }\n\n        if (this.props.item[this.props.subKey] && this.props.item[this.props.subKey].findIndex(function (el) {\n          return nextProps.selectedItems.includes(el[_this2.props.uniqueKey]);\n        }) !== -1) {\n          return true;\n        }\n\n        if (this.props.item[this.props.subKey] && this.props.item[this.props.subKey].findIndex(function (el) {\n          return _this2.props.selectedItems.includes(el[_this2.props.uniqueKey]);\n        }) !== -1) {\n          return true;\n        }\n      }\n\n      if (this.props.searchTerm !== nextProps.searchTerm) {\n        return true;\n      }\n\n      if (this.state.showSubCategories !== nextState.showSubCategories) {\n        return true;\n      }\n\n      if (this.props.mergedStyles !== nextProps.mergedStyles) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          item = _this$props6.item,\n          icons = _this$props6.icons,\n          mergedStyles = _this$props6.mergedStyles,\n          mergedColors = _this$props6.mergedColors,\n          uniqueKey = _this$props6.uniqueKey,\n          subKey = _this$props6.subKey,\n          showDropDowns = _this$props6.showDropDowns,\n          readOnlyHeadings = _this$props6.readOnlyHeadings,\n          itemFontFamily = _this$props6.itemFontFamily,\n          selectedIconOnLeft = _this$props6.selectedIconOnLeft,\n          dropDownToggleIconUpComponent = _this$props6.dropDownToggleIconUpComponent,\n          dropDownToggleIconDownComponent = _this$props6.dropDownToggleIconDownComponent,\n          itemNumberOfLines = _this$props6.itemNumberOfLines,\n          displayKey = _this$props6.displayKey,\n          selectedItems = _this$props6.selectedItems,\n          iconKey = _this$props6.iconKey,\n          Icon = _this$props6.iconRenderer,\n          subItemsFlatListProps = _this$props6.subItemsFlatListProps;\n      var hasDropDown = item[subKey] && item[subKey].length > 0 && showDropDowns;\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        key: item[uniqueKey],\n        style: {\n          flexDirection: 'row',\n          flex: 1,\n          backgroundColor: mergedColors.itemBackground\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 9\n        }\n      }, React.createElement(TouchableOpacity, {\n        disabled: readOnlyHeadings && !showDropDowns || item.disabled,\n        onPress: this._dropDownOrToggle,\n        style: [{\n          flex: 1,\n          flexDirection: 'row',\n          alignItems: 'center',\n          justifyContent: 'flex-start',\n          paddingVertical: 6\n        }, mergedStyles.item, this._itemSelected(item) && mergedStyles.selectedItem],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }\n      }, selectedIconOnLeft && this._renderSelectedIcon(), iconKey && item[iconKey] && React.createElement(ItemIcon, {\n        iconRenderer: Icon,\n        iconKey: iconKey,\n        icon: item[iconKey],\n        style: mergedStyles.itemIconStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 15\n        }\n      }), React.createElement(Text, {\n        numberOfLines: itemNumberOfLines,\n        style: [{\n          flex: 1,\n          color: item.disabled ? mergedColors.disabled : mergedColors.text\n        }, itemFontFamily, mergedStyles.itemText, this._itemSelected(item) && mergedStyles.selectedItemText],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 13\n        }\n      }, item[displayKey]), !selectedIconOnLeft && this._renderSelectedIcon()), hasDropDown && React.createElement(TouchableOpacity, {\n        style: [{\n          alignItems: 'flex-end',\n          justifyContent: 'center',\n          paddingHorizontal: 10,\n          backgroundColor: 'transparent'\n        }, mergedStyles.toggleIcon],\n        onPress: this._toggleDropDown,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 13\n        }\n      }, this._showSubCategoryDropDown() ? React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 17\n        }\n      }, callIfFunction(dropDownToggleIconUpComponent) || React.createElement(Icon, _extends({\n        style: {\n          color: mergedColors.primary\n        }\n      }, icons.arrowUp, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 21\n        }\n      }))) : React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 17\n        }\n      }, callIfFunction(dropDownToggleIconDownComponent) || React.createElement(Icon, _extends({\n        style: {\n          color: mergedColors.primary\n        }\n      }, icons.arrowDown, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 21\n        }\n      }))))), item[subKey] && this._showSubCategoryDropDown() && React.createElement(FlatList, _extends({\n        keyExtractor: function keyExtractor(i) {\n          return \"\" + i[uniqueKey];\n        },\n        data: item[subKey],\n        extraData: selectedItems,\n        ItemSeparatorComponent: this._renderSubSeparator,\n        renderItem: this._renderSubItemFlatList,\n        initialNumToRender: 20\n      }, subItemsFlatListProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return RowItem;\n}(Component);\n\nexport default RowItem;","map":{"version":3,"sources":["/Users/iShrusti/Documents/GitHub/Pharmacy_App/node_modules/react-native-sectioned-multi-select/lib/components/RowItem.js"],"names":["React","Component","PropTypes","RowSubItem","ItemIcon","callIfFunction","RowItem","props","_itemSelected","item","uniqueKey","selectedItems","includes","_toggleItem","hasChildren","_toggleSubItem","subToggled","state","setState","_expandDropDowns","expandDropDowns","showSubCategories","_toggleDropDown","customLayoutAnimation","animateDropDowns","animation","LayoutAnimation","Presets","easeInEaseOut","configureNext","_showSubCategoryDropDown","showDropDowns","searchTerm","length","_dropDownOrToggle","readOnlyHeadings","subKey","_renderSubItemFlatList","highlightedChildren","_renderSubSeparator","flex","height","StyleSheet","hairlineWidth","alignSelf","backgroundColor","mergedStyles","subSeparator","_renderSelectedIcon","icons","selectedIconComponent","mergedColors","unselectedIconComponent","Icon","iconRenderer","color","success","paddingLeft","check","Platform","OS","UIManager","setLayoutAnimationEnabledExperimental","nextProps","nextState","findIndex","el","itemFontFamily","selectedIconOnLeft","dropDownToggleIconUpComponent","dropDownToggleIconDownComponent","itemNumberOfLines","displayKey","iconKey","subItemsFlatListProps","hasDropDown","flexDirection","itemBackground","disabled","alignItems","justifyContent","paddingVertical","selectedItem","itemIconStyle","text","itemText","selectedItemText","paddingHorizontal","toggleIcon","primary","arrowUp","arrowDown","i"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport {\n  View,\n  TouchableOpacity,\n  Text,\n  Platform,\n  UIManager,\n  LayoutAnimation,\n  FlatList,\n  StyleSheet\n} from 'react-native'\nimport RowSubItem from './RowSubItem'\nimport ItemIcon from './ItemIcon'\nimport { callIfFunction } from '../helpers'\n\nclass RowItem extends Component {\n  constructor(props) {\n    super(props)\n\n    if (Platform.OS === 'android') {\n      UIManager.setLayoutAnimationEnabledExperimental && UIManager.setLayoutAnimationEnabledExperimental(true)\n    }\n    this.state = {\n      showSubCategories: false,\n      subToggled: null\n    }\n  }\n\n  componentDidMount() {\n    this._expandDropDowns()\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (nextProps.selectedItems !== this.props.selectedItems) {\n      if (\n        this.props.selectedItems.includes(\n          this.props.item[this.props.uniqueKey]\n        ) &&\n        !nextProps.selectedItems.includes(this.props.item[this.props.uniqueKey])\n      ) {\n        return true\n      }\n      if (\n        !this.props.selectedItems.includes(\n          this.props.item[this.props.uniqueKey]\n        ) &&\n        nextProps.selectedItems.includes(this.props.item[this.props.uniqueKey])\n      ) {\n        return true\n      }\n\n      if (this.state.subToggled !== nextState.subToggled) {\n        return true\n      }\n\n      // propagate updates to child items\n      // when adding/removing child items when\n      // parent isn't selected\n\n      if (\n        this.props.item[this.props.subKey] &&\n        this.props.item[this.props.subKey].findIndex((el) =>\n          nextProps.selectedItems.includes(el[this.props.uniqueKey])\n        ) !== -1\n      ) {\n        return true\n      }\n      if (\n        this.props.item[this.props.subKey] &&\n        this.props.item[this.props.subKey].findIndex((el) =>\n          this.props.selectedItems.includes(el[this.props.uniqueKey])\n        ) !== -1\n      ) {\n        return true\n      }\n    }\n\n    if (this.props.searchTerm !== nextProps.searchTerm) {\n      return true\n    }\n    if (this.state.showSubCategories !== nextState.showSubCategories) {\n      return true\n    }\n    if (this.props.mergedStyles !== nextProps.mergedStyles) {\n      return true\n    }\n    return false\n  }\n\n  _itemSelected = (item) => {\n    const { uniqueKey, selectedItems } = this.props\n    return selectedItems.includes(item[uniqueKey])\n  }\n\n  _toggleItem = (item, hasChildren) => {\n    this.props._toggleItem(item, hasChildren)\n  }\n\n  _toggleSubItem = (item) => {\n    const { uniqueKey } = this.props\n    const { subToggled } = this.state\n    // we are only concerned about\n    // triggering shouldComponentUpdate\n    if (subToggled === item[uniqueKey]) {\n      this.setState({ subToggled: false })\n    } else {\n      this.setState({ subToggled: item[uniqueKey] })\n    }\n    this.props._toggleItem(item, false)\n  }\n\n  _expandDropDowns = () => {\n    const { expandDropDowns } = this.props\n    if (expandDropDowns) {\n      this.setState({ showSubCategories: true })\n    }\n  }\n\n  _toggleDropDown = () => {\n    const { customLayoutAnimation, animateDropDowns } = this.props\n    const animation =\n      customLayoutAnimation || LayoutAnimation.Presets.easeInEaseOut\n    animateDropDowns && LayoutAnimation.configureNext(animation)\n    this.setState({ showSubCategories: !this.state.showSubCategories })\n  }\n\n  _showSubCategoryDropDown = () => {\n    const { showDropDowns, searchTerm } = this.props\n    if (searchTerm.length) {\n      return true\n    }\n    if (showDropDowns) {\n      return this.state.showSubCategories\n    }\n\n    return true\n  }\n\n  _dropDownOrToggle = () => {\n    const {\n      readOnlyHeadings,\n      showDropDowns,\n      uniqueKey,\n      subKey,\n      item\n    } = this.props\n\n    const hasChildren = !!(item[subKey] && item[subKey].length)\n\n    if (readOnlyHeadings && item[subKey] && showDropDowns) {\n      this._toggleDropDown()\n    } else if (readOnlyHeadings) {\n    } else {\n      this._toggleItem(item, hasChildren)\n    }\n  }\n\n  _renderSubItemFlatList = ({ item }) => (\n    <RowSubItem\n      _toggleSubItem={this._toggleSubItem}\n      subItem={item}\n      highlightedChildren={this.props.highlightedChildren}\n      {...this.props}\n    />\n  )\n\n  _renderSubSeparator = () => (\n    <View\n      style={[\n        {\n          flex: 1,\n          height: StyleSheet.hairlineWidth,\n          alignSelf: 'stretch',\n          backgroundColor: '#dadada'\n        },\n        this.props.mergedStyles.subSeparator\n      ]}\n    />\n  )\n  _renderSelectedIcon = () => {\n    const {\n      item,\n      icons,\n      selectedIconComponent,\n      mergedColors,\n      unselectedIconComponent,\n      iconRenderer: Icon\n    } = this.props\n    return this._itemSelected(item)\n      ? callIfFunction(selectedIconComponent) || (\n          <Icon\n            style={{\n              color: mergedColors.success,\n              paddingLeft: 10\n            }}\n            {...icons.check}\n          />\n        )\n      : callIfFunction(unselectedIconComponent) || null\n  }\n\n  render() {\n    const {\n      item,\n      icons,\n      mergedStyles,\n      mergedColors,\n      uniqueKey,\n      subKey,\n      showDropDowns,\n      readOnlyHeadings,\n      itemFontFamily,\n      selectedIconOnLeft,\n      dropDownToggleIconUpComponent,\n      dropDownToggleIconDownComponent,\n      itemNumberOfLines,\n      displayKey,\n      selectedItems,\n      iconKey,\n      iconRenderer: Icon,\n      subItemsFlatListProps\n    } = this.props\n    const hasDropDown = item[subKey] && item[subKey].length > 0 && showDropDowns\n\n    return (\n      <View>\n        <View\n          key={item[uniqueKey]}\n          style={{\n            flexDirection: 'row',\n            flex: 1,\n            backgroundColor: mergedColors.itemBackground\n          }}>\n          <TouchableOpacity\n            disabled={(readOnlyHeadings && !showDropDowns) || item.disabled}\n            onPress={this._dropDownOrToggle}\n            style={[\n              {\n                flex: 1,\n                flexDirection: 'row',\n                alignItems: 'center',\n                justifyContent: 'flex-start',\n                paddingVertical: 6\n              },\n              mergedStyles.item,\n              this._itemSelected(item) && mergedStyles.selectedItem\n            ]}>\n            {selectedIconOnLeft && this._renderSelectedIcon()}\n            {iconKey && item[iconKey] && (\n              <ItemIcon\n                iconRenderer={Icon}\n                iconKey={iconKey}\n                icon={item[iconKey]}\n                style={mergedStyles.itemIconStyle}\n              />\n            )}\n            <Text\n              numberOfLines={itemNumberOfLines}\n              style={[\n                {\n                  flex: 1,\n                  color: item.disabled\n                    ? mergedColors.disabled\n                    : mergedColors.text\n                },\n                itemFontFamily,\n                mergedStyles.itemText,\n                this._itemSelected(item) && mergedStyles.selectedItemText\n              ]}>\n              {item[displayKey]}\n            </Text>\n            {!selectedIconOnLeft && this._renderSelectedIcon()}\n          </TouchableOpacity>\n          {hasDropDown && (\n            <TouchableOpacity\n              style={[\n                {\n                  alignItems: 'flex-end',\n                  justifyContent: 'center',\n                  paddingHorizontal: 10,\n                  backgroundColor: 'transparent'\n                },\n                mergedStyles.toggleIcon\n              ]}\n              onPress={this._toggleDropDown}>\n              {this._showSubCategoryDropDown() ? (\n                <View>\n                  {callIfFunction(dropDownToggleIconUpComponent) || (\n                    <Icon\n                      style={{\n                        color: mergedColors.primary\n                      }}\n                      {...icons.arrowUp}\n                    />\n                  )}\n                </View>\n              ) : (\n                <View>\n                  {callIfFunction(dropDownToggleIconDownComponent) || (\n                    <Icon\n                      style={{\n                        color: mergedColors.primary\n                      }}\n                      {...icons.arrowDown}\n                    />\n                  )}\n                </View>\n              )}\n            </TouchableOpacity>\n          )}\n        </View>\n        {item[subKey] && this._showSubCategoryDropDown() && (\n          <FlatList\n            keyExtractor={(i) => `${i[uniqueKey]}`}\n            data={item[subKey]}\n            extraData={selectedItems}\n            ItemSeparatorComponent={this._renderSubSeparator}\n            renderItem={this._renderSubItemFlatList}\n            initialNumToRender={20}\n            {...subItemsFlatListProps}\n          />\n        )}\n      </View>\n    )\n  }\n}\n\nexport default RowItem\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import Platform from \"react-native-web/dist/exports/Platform\";\nimport { makeRemote, makeShareable } from \"./core\";\nvar NUMBER = '[-+]?\\\\d*\\\\.?\\\\d+';\nvar PERCENTAGE = NUMBER + '%';\n\nfunction call() {\n  'worklet';\n\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return '\\\\(\\\\s*(' + args.join(')\\\\s*,\\\\s*(') + ')\\\\s*\\\\)';\n}\n\nvar jsCachedMatchers = {};\nvar uiCachedMatchers = makeRemote({});\n\nfunction getMatchers() {\n  'worklet';\n\n  var cachedMatchers = _WORKLET ? uiCachedMatchers : jsCachedMatchers;\n\n  if (cachedMatchers.rgb === undefined) {\n    cachedMatchers.rgb = new RegExp('rgb' + call(NUMBER, NUMBER, NUMBER));\n    cachedMatchers.rgba = new RegExp('rgba' + call(NUMBER, NUMBER, NUMBER, NUMBER));\n    cachedMatchers.hsl = new RegExp('hsl' + call(NUMBER, PERCENTAGE, PERCENTAGE));\n    cachedMatchers.hsla = new RegExp('hsla' + call(NUMBER, PERCENTAGE, PERCENTAGE, NUMBER));\n    cachedMatchers.hex3 = /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/;\n    cachedMatchers.hex4 = /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/;\n    cachedMatchers.hex6 = /^#([0-9a-fA-F]{6})$/;\n    cachedMatchers.hex8 = /^#([0-9a-fA-F]{8})$/;\n  }\n\n  return cachedMatchers;\n}\n\nfunction hue2rgb(p, q, t) {\n  'worklet';\n\n  if (t < 0) {\n    t += 1;\n  }\n\n  if (t > 1) {\n    t -= 1;\n  }\n\n  if (t < 1 / 6) {\n    return p + (q - p) * 6 * t;\n  }\n\n  if (t < 1 / 2) {\n    return q;\n  }\n\n  if (t < 2 / 3) {\n    return p + (q - p) * (2 / 3 - t) * 6;\n  }\n\n  return p;\n}\n\nfunction hslToRgb(h, s, l) {\n  'worklet';\n\n  var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n  var p = 2 * l - q;\n  var r = hue2rgb(p, q, h + 1 / 3);\n  var g = hue2rgb(p, q, h);\n  var b = hue2rgb(p, q, h - 1 / 3);\n  return Math.round(r * 255) << 24 | Math.round(g * 255) << 16 | Math.round(b * 255) << 8;\n}\n\nfunction parse255(str) {\n  'worklet';\n\n  var int = Number.parseInt(str, 10);\n\n  if (int < 0) {\n    return 0;\n  }\n\n  if (int > 255) {\n    return 255;\n  }\n\n  return int;\n}\n\nfunction parse360(str) {\n  'worklet';\n\n  var int = Number.parseFloat(str);\n  return (int % 360 + 360) % 360 / 360;\n}\n\nfunction parse1(str) {\n  'worklet';\n\n  var num = Number.parseFloat(str);\n\n  if (num < 0) {\n    return 0;\n  }\n\n  if (num > 1) {\n    return 255;\n  }\n\n  return Math.round(num * 255);\n}\n\nfunction parsePercentage(str) {\n  'worklet';\n\n  var int = Number.parseFloat(str);\n\n  if (int < 0) {\n    return 0;\n  }\n\n  if (int > 100) {\n    return 1;\n  }\n\n  return int / 100;\n}\n\nvar names = makeShareable({\n  transparent: 0x00000000,\n  aliceblue: 0xf0f8ffff,\n  antiquewhite: 0xfaebd7ff,\n  aqua: 0x00ffffff,\n  aquamarine: 0x7fffd4ff,\n  azure: 0xf0ffffff,\n  beige: 0xf5f5dcff,\n  bisque: 0xffe4c4ff,\n  black: 0x000000ff,\n  blanchedalmond: 0xffebcdff,\n  blue: 0x0000ffff,\n  blueviolet: 0x8a2be2ff,\n  brown: 0xa52a2aff,\n  burlywood: 0xdeb887ff,\n  burntsienna: 0xea7e5dff,\n  cadetblue: 0x5f9ea0ff,\n  chartreuse: 0x7fff00ff,\n  chocolate: 0xd2691eff,\n  coral: 0xff7f50ff,\n  cornflowerblue: 0x6495edff,\n  cornsilk: 0xfff8dcff,\n  crimson: 0xdc143cff,\n  cyan: 0x00ffffff,\n  darkblue: 0x00008bff,\n  darkcyan: 0x008b8bff,\n  darkgoldenrod: 0xb8860bff,\n  darkgray: 0xa9a9a9ff,\n  darkgreen: 0x006400ff,\n  darkgrey: 0xa9a9a9ff,\n  darkkhaki: 0xbdb76bff,\n  darkmagenta: 0x8b008bff,\n  darkolivegreen: 0x556b2fff,\n  darkorange: 0xff8c00ff,\n  darkorchid: 0x9932ccff,\n  darkred: 0x8b0000ff,\n  darksalmon: 0xe9967aff,\n  darkseagreen: 0x8fbc8fff,\n  darkslateblue: 0x483d8bff,\n  darkslategray: 0x2f4f4fff,\n  darkslategrey: 0x2f4f4fff,\n  darkturquoise: 0x00ced1ff,\n  darkviolet: 0x9400d3ff,\n  deeppink: 0xff1493ff,\n  deepskyblue: 0x00bfffff,\n  dimgray: 0x696969ff,\n  dimgrey: 0x696969ff,\n  dodgerblue: 0x1e90ffff,\n  firebrick: 0xb22222ff,\n  floralwhite: 0xfffaf0ff,\n  forestgreen: 0x228b22ff,\n  fuchsia: 0xff00ffff,\n  gainsboro: 0xdcdcdcff,\n  ghostwhite: 0xf8f8ffff,\n  gold: 0xffd700ff,\n  goldenrod: 0xdaa520ff,\n  gray: 0x808080ff,\n  green: 0x008000ff,\n  greenyellow: 0xadff2fff,\n  grey: 0x808080ff,\n  honeydew: 0xf0fff0ff,\n  hotpink: 0xff69b4ff,\n  indianred: 0xcd5c5cff,\n  indigo: 0x4b0082ff,\n  ivory: 0xfffff0ff,\n  khaki: 0xf0e68cff,\n  lavender: 0xe6e6faff,\n  lavenderblush: 0xfff0f5ff,\n  lawngreen: 0x7cfc00ff,\n  lemonchiffon: 0xfffacdff,\n  lightblue: 0xadd8e6ff,\n  lightcoral: 0xf08080ff,\n  lightcyan: 0xe0ffffff,\n  lightgoldenrodyellow: 0xfafad2ff,\n  lightgray: 0xd3d3d3ff,\n  lightgreen: 0x90ee90ff,\n  lightgrey: 0xd3d3d3ff,\n  lightpink: 0xffb6c1ff,\n  lightsalmon: 0xffa07aff,\n  lightseagreen: 0x20b2aaff,\n  lightskyblue: 0x87cefaff,\n  lightslategray: 0x778899ff,\n  lightslategrey: 0x778899ff,\n  lightsteelblue: 0xb0c4deff,\n  lightyellow: 0xffffe0ff,\n  lime: 0x00ff00ff,\n  limegreen: 0x32cd32ff,\n  linen: 0xfaf0e6ff,\n  magenta: 0xff00ffff,\n  maroon: 0x800000ff,\n  mediumaquamarine: 0x66cdaaff,\n  mediumblue: 0x0000cdff,\n  mediumorchid: 0xba55d3ff,\n  mediumpurple: 0x9370dbff,\n  mediumseagreen: 0x3cb371ff,\n  mediumslateblue: 0x7b68eeff,\n  mediumspringgreen: 0x00fa9aff,\n  mediumturquoise: 0x48d1ccff,\n  mediumvioletred: 0xc71585ff,\n  midnightblue: 0x191970ff,\n  mintcream: 0xf5fffaff,\n  mistyrose: 0xffe4e1ff,\n  moccasin: 0xffe4b5ff,\n  navajowhite: 0xffdeadff,\n  navy: 0x000080ff,\n  oldlace: 0xfdf5e6ff,\n  olive: 0x808000ff,\n  olivedrab: 0x6b8e23ff,\n  orange: 0xffa500ff,\n  orangered: 0xff4500ff,\n  orchid: 0xda70d6ff,\n  palegoldenrod: 0xeee8aaff,\n  palegreen: 0x98fb98ff,\n  paleturquoise: 0xafeeeeff,\n  palevioletred: 0xdb7093ff,\n  papayawhip: 0xffefd5ff,\n  peachpuff: 0xffdab9ff,\n  peru: 0xcd853fff,\n  pink: 0xffc0cbff,\n  plum: 0xdda0ddff,\n  powderblue: 0xb0e0e6ff,\n  purple: 0x800080ff,\n  rebeccapurple: 0x663399ff,\n  red: 0xff0000ff,\n  rosybrown: 0xbc8f8fff,\n  royalblue: 0x4169e1ff,\n  saddlebrown: 0x8b4513ff,\n  salmon: 0xfa8072ff,\n  sandybrown: 0xf4a460ff,\n  seagreen: 0x2e8b57ff,\n  seashell: 0xfff5eeff,\n  sienna: 0xa0522dff,\n  silver: 0xc0c0c0ff,\n  skyblue: 0x87ceebff,\n  slateblue: 0x6a5acdff,\n  slategray: 0x708090ff,\n  slategrey: 0x708090ff,\n  snow: 0xfffafaff,\n  springgreen: 0x00ff7fff,\n  steelblue: 0x4682b4ff,\n  tan: 0xd2b48cff,\n  teal: 0x008080ff,\n  thistle: 0xd8bfd8ff,\n  tomato: 0xff6347ff,\n  turquoise: 0x40e0d0ff,\n  violet: 0xee82eeff,\n  wheat: 0xf5deb3ff,\n  white: 0xffffffff,\n  whitesmoke: 0xf5f5f5ff,\n  yellow: 0xffff00ff,\n  yellowgreen: 0x9acd32ff\n});\n\nfunction normalizeColor(color) {\n  'worklet';\n\n  var matchers = getMatchers();\n  var match;\n\n  if (typeof color === 'number') {\n    if (color >>> 0 === color && color >= 0 && color <= 0xffffffff) {\n      return color;\n    }\n\n    return null;\n  }\n\n  if (typeof color !== 'string') {\n    return null;\n  }\n\n  if (match = matchers.hex6.exec(color)) {\n    return Number.parseInt(match[1] + 'ff', 16) >>> 0;\n  }\n\n  if (names[color] !== undefined) {\n    return names[color];\n  }\n\n  if (match = matchers.rgb.exec(color)) {\n    return (parse255(match[1]) << 24 | parse255(match[2]) << 16 | parse255(match[3]) << 8 | 0x000000ff) >>> 0;\n  }\n\n  if (match = matchers.rgba.exec(color)) {\n    return (parse255(match[1]) << 24 | parse255(match[2]) << 16 | parse255(match[3]) << 8 | parse1(match[4])) >>> 0;\n  }\n\n  if (match = matchers.hex3.exec(color)) {\n    return Number.parseInt(match[1] + match[1] + match[2] + match[2] + match[3] + match[3] + 'ff', 16) >>> 0;\n  }\n\n  if (match = matchers.hex8.exec(color)) {\n    return Number.parseInt(match[1], 16) >>> 0;\n  }\n\n  if (match = matchers.hex4.exec(color)) {\n    return Number.parseInt(match[1] + match[1] + match[2] + match[2] + match[3] + match[3] + match[4] + match[4], 16) >>> 0;\n  }\n\n  if (match = matchers.hsl.exec(color)) {\n    return (hslToRgb(parse360(match[1]), parsePercentage(match[2]), parsePercentage(match[3])) | 0x000000ff) >>> 0;\n  }\n\n  if (match = matchers.hsla.exec(color)) {\n    return (hslToRgb(parse360(match[1]), parsePercentage(match[2]), parsePercentage(match[3])) | parse1(match[4])) >>> 0;\n  }\n\n  return null;\n}\n\nexport default function processColor(color) {\n  'worklet';\n\n  if (color === null || color === undefined || typeof color === 'number') {\n    return color;\n  }\n\n  var normalizedColor = normalizeColor(color);\n\n  if (normalizedColor === null || normalizedColor === undefined) {\n    return undefined;\n  }\n\n  if (typeof normalizedColor !== 'number') {\n    return null;\n  }\n\n  normalizedColor = (normalizedColor << 24 | normalizedColor >>> 8) >>> 0;\n\n  if (Platform.OS === 'android') {\n    normalizedColor = normalizedColor | 0x0;\n  }\n\n  return normalizedColor;\n}","map":{"version":3,"sources":["/Users/iShrusti/Documents/GitHub/Pharmacy_App/node_modules/react-native-reanimated/src/reanimated2/Colors.js"],"names":["makeRemote","makeShareable","NUMBER","PERCENTAGE","call","args","join","jsCachedMatchers","uiCachedMatchers","getMatchers","cachedMatchers","_WORKLET","rgb","undefined","RegExp","rgba","hsl","hsla","hex3","hex4","hex6","hex8","hue2rgb","p","q","t","hslToRgb","h","s","l","r","g","b","Math","round","parse255","str","int","Number","parseInt","parse360","parseFloat","parse1","num","parsePercentage","names","transparent","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","burntsienna","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","normalizeColor","color","matchers","match","exec","processColor","normalizedColor","Platform","OS"],"mappings":"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","sourcesContent":["/* global _WORKLET */\n/**\n * Copied from:\n * react-native/Libraries/StyleSheet/normalizeColor.js\n * react-native/Libraries/StyleSheet/processColor.js\n */\n\n/* eslint no-bitwise: 0 */\n\nimport { Platform } from 'react-native';\nimport { makeRemote, makeShareable } from './core';\n\n// var INTEGER = '[-+]?\\\\d+';\nconst NUMBER = '[-+]?\\\\d*\\\\.?\\\\d+';\nconst PERCENTAGE = NUMBER + '%';\n\nfunction call(...args) {\n  'worklet';\n  return '\\\\(\\\\s*(' + args.join(')\\\\s*,\\\\s*(') + ')\\\\s*\\\\)';\n}\n\n// matchers use RegExp objects which needs to be created separately on JS and on\n// the UI thread. We keep separate cache of Regexes for UI and JS using the below\n// objects, then pick the right cache in getMatchers() method.\nconst jsCachedMatchers = {};\nconst uiCachedMatchers = makeRemote({});\n\nfunction getMatchers() {\n  'worklet';\n  const cachedMatchers = _WORKLET ? uiCachedMatchers : jsCachedMatchers;\n  if (cachedMatchers.rgb === undefined) {\n    cachedMatchers.rgb = new RegExp('rgb' + call(NUMBER, NUMBER, NUMBER));\n    cachedMatchers.rgba = new RegExp(\n      'rgba' + call(NUMBER, NUMBER, NUMBER, NUMBER)\n    );\n    cachedMatchers.hsl = new RegExp(\n      'hsl' + call(NUMBER, PERCENTAGE, PERCENTAGE)\n    );\n    cachedMatchers.hsla = new RegExp(\n      'hsla' + call(NUMBER, PERCENTAGE, PERCENTAGE, NUMBER)\n    );\n    cachedMatchers.hex3 = /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/;\n    cachedMatchers.hex4 = /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/;\n    cachedMatchers.hex6 = /^#([0-9a-fA-F]{6})$/;\n    cachedMatchers.hex8 = /^#([0-9a-fA-F]{8})$/;\n  }\n  return cachedMatchers;\n}\n\nfunction hue2rgb(p, q, t) {\n  'worklet';\n  if (t < 0) {\n    t += 1;\n  }\n  if (t > 1) {\n    t -= 1;\n  }\n  if (t < 1 / 6) {\n    return p + (q - p) * 6 * t;\n  }\n  if (t < 1 / 2) {\n    return q;\n  }\n  if (t < 2 / 3) {\n    return p + (q - p) * (2 / 3 - t) * 6;\n  }\n  return p;\n}\n\nfunction hslToRgb(h, s, l) {\n  'worklet';\n  const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n  const p = 2 * l - q;\n  const r = hue2rgb(p, q, h + 1 / 3);\n  const g = hue2rgb(p, q, h);\n  const b = hue2rgb(p, q, h - 1 / 3);\n\n  return (\n    (Math.round(r * 255) << 24) |\n    (Math.round(g * 255) << 16) |\n    (Math.round(b * 255) << 8)\n  );\n}\n\nfunction parse255(str) {\n  'worklet';\n  const int = Number.parseInt(str, 10);\n  if (int < 0) {\n    return 0;\n  }\n  if (int > 255) {\n    return 255;\n  }\n  return int;\n}\n\nfunction parse360(str) {\n  'worklet';\n  const int = Number.parseFloat(str);\n  return (((int % 360) + 360) % 360) / 360;\n}\n\nfunction parse1(str) {\n  'worklet';\n  const num = Number.parseFloat(str);\n  if (num < 0) {\n    return 0;\n  }\n  if (num > 1) {\n    return 255;\n  }\n  return Math.round(num * 255);\n}\n\nfunction parsePercentage(str) {\n  'worklet';\n  // parseFloat conveniently ignores the final %\n  const int = Number.parseFloat(str);\n  if (int < 0) {\n    return 0;\n  }\n  if (int > 100) {\n    return 1;\n  }\n  return int / 100;\n}\n\nconst names = makeShareable({\n  transparent: 0x00000000,\n\n  // http://www.w3.org/TR/css3-color/#svg-color\n  aliceblue: 0xf0f8ffff,\n  antiquewhite: 0xfaebd7ff,\n  aqua: 0x00ffffff,\n  aquamarine: 0x7fffd4ff,\n  azure: 0xf0ffffff,\n  beige: 0xf5f5dcff,\n  bisque: 0xffe4c4ff,\n  black: 0x000000ff,\n  blanchedalmond: 0xffebcdff,\n  blue: 0x0000ffff,\n  blueviolet: 0x8a2be2ff,\n  brown: 0xa52a2aff,\n  burlywood: 0xdeb887ff,\n  burntsienna: 0xea7e5dff,\n  cadetblue: 0x5f9ea0ff,\n  chartreuse: 0x7fff00ff,\n  chocolate: 0xd2691eff,\n  coral: 0xff7f50ff,\n  cornflowerblue: 0x6495edff,\n  cornsilk: 0xfff8dcff,\n  crimson: 0xdc143cff,\n  cyan: 0x00ffffff,\n  darkblue: 0x00008bff,\n  darkcyan: 0x008b8bff,\n  darkgoldenrod: 0xb8860bff,\n  darkgray: 0xa9a9a9ff,\n  darkgreen: 0x006400ff,\n  darkgrey: 0xa9a9a9ff,\n  darkkhaki: 0xbdb76bff,\n  darkmagenta: 0x8b008bff,\n  darkolivegreen: 0x556b2fff,\n  darkorange: 0xff8c00ff,\n  darkorchid: 0x9932ccff,\n  darkred: 0x8b0000ff,\n  darksalmon: 0xe9967aff,\n  darkseagreen: 0x8fbc8fff,\n  darkslateblue: 0x483d8bff,\n  darkslategray: 0x2f4f4fff,\n  darkslategrey: 0x2f4f4fff,\n  darkturquoise: 0x00ced1ff,\n  darkviolet: 0x9400d3ff,\n  deeppink: 0xff1493ff,\n  deepskyblue: 0x00bfffff,\n  dimgray: 0x696969ff,\n  dimgrey: 0x696969ff,\n  dodgerblue: 0x1e90ffff,\n  firebrick: 0xb22222ff,\n  floralwhite: 0xfffaf0ff,\n  forestgreen: 0x228b22ff,\n  fuchsia: 0xff00ffff,\n  gainsboro: 0xdcdcdcff,\n  ghostwhite: 0xf8f8ffff,\n  gold: 0xffd700ff,\n  goldenrod: 0xdaa520ff,\n  gray: 0x808080ff,\n  green: 0x008000ff,\n  greenyellow: 0xadff2fff,\n  grey: 0x808080ff,\n  honeydew: 0xf0fff0ff,\n  hotpink: 0xff69b4ff,\n  indianred: 0xcd5c5cff,\n  indigo: 0x4b0082ff,\n  ivory: 0xfffff0ff,\n  khaki: 0xf0e68cff,\n  lavender: 0xe6e6faff,\n  lavenderblush: 0xfff0f5ff,\n  lawngreen: 0x7cfc00ff,\n  lemonchiffon: 0xfffacdff,\n  lightblue: 0xadd8e6ff,\n  lightcoral: 0xf08080ff,\n  lightcyan: 0xe0ffffff,\n  lightgoldenrodyellow: 0xfafad2ff,\n  lightgray: 0xd3d3d3ff,\n  lightgreen: 0x90ee90ff,\n  lightgrey: 0xd3d3d3ff,\n  lightpink: 0xffb6c1ff,\n  lightsalmon: 0xffa07aff,\n  lightseagreen: 0x20b2aaff,\n  lightskyblue: 0x87cefaff,\n  lightslategray: 0x778899ff,\n  lightslategrey: 0x778899ff,\n  lightsteelblue: 0xb0c4deff,\n  lightyellow: 0xffffe0ff,\n  lime: 0x00ff00ff,\n  limegreen: 0x32cd32ff,\n  linen: 0xfaf0e6ff,\n  magenta: 0xff00ffff,\n  maroon: 0x800000ff,\n  mediumaquamarine: 0x66cdaaff,\n  mediumblue: 0x0000cdff,\n  mediumorchid: 0xba55d3ff,\n  mediumpurple: 0x9370dbff,\n  mediumseagreen: 0x3cb371ff,\n  mediumslateblue: 0x7b68eeff,\n  mediumspringgreen: 0x00fa9aff,\n  mediumturquoise: 0x48d1ccff,\n  mediumvioletred: 0xc71585ff,\n  midnightblue: 0x191970ff,\n  mintcream: 0xf5fffaff,\n  mistyrose: 0xffe4e1ff,\n  moccasin: 0xffe4b5ff,\n  navajowhite: 0xffdeadff,\n  navy: 0x000080ff,\n  oldlace: 0xfdf5e6ff,\n  olive: 0x808000ff,\n  olivedrab: 0x6b8e23ff,\n  orange: 0xffa500ff,\n  orangered: 0xff4500ff,\n  orchid: 0xda70d6ff,\n  palegoldenrod: 0xeee8aaff,\n  palegreen: 0x98fb98ff,\n  paleturquoise: 0xafeeeeff,\n  palevioletred: 0xdb7093ff,\n  papayawhip: 0xffefd5ff,\n  peachpuff: 0xffdab9ff,\n  peru: 0xcd853fff,\n  pink: 0xffc0cbff,\n  plum: 0xdda0ddff,\n  powderblue: 0xb0e0e6ff,\n  purple: 0x800080ff,\n  rebeccapurple: 0x663399ff,\n  red: 0xff0000ff,\n  rosybrown: 0xbc8f8fff,\n  royalblue: 0x4169e1ff,\n  saddlebrown: 0x8b4513ff,\n  salmon: 0xfa8072ff,\n  sandybrown: 0xf4a460ff,\n  seagreen: 0x2e8b57ff,\n  seashell: 0xfff5eeff,\n  sienna: 0xa0522dff,\n  silver: 0xc0c0c0ff,\n  skyblue: 0x87ceebff,\n  slateblue: 0x6a5acdff,\n  slategray: 0x708090ff,\n  slategrey: 0x708090ff,\n  snow: 0xfffafaff,\n  springgreen: 0x00ff7fff,\n  steelblue: 0x4682b4ff,\n  tan: 0xd2b48cff,\n  teal: 0x008080ff,\n  thistle: 0xd8bfd8ff,\n  tomato: 0xff6347ff,\n  turquoise: 0x40e0d0ff,\n  violet: 0xee82eeff,\n  wheat: 0xf5deb3ff,\n  white: 0xffffffff,\n  whitesmoke: 0xf5f5f5ff,\n  yellow: 0xffff00ff,\n  yellowgreen: 0x9acd32ff,\n});\n\nfunction normalizeColor(color) {\n  'worklet';\n\n  const matchers = getMatchers();\n\n  let match;\n\n  if (typeof color === 'number') {\n    if (color >>> 0 === color && color >= 0 && color <= 0xffffffff) {\n      return color;\n    }\n    return null;\n  }\n\n  if (typeof color !== 'string') {\n    return null;\n  }\n\n  // Ordered based on occurrences on Facebook codebase\n  if ((match = matchers.hex6.exec(color))) {\n    return Number.parseInt(match[1] + 'ff', 16) >>> 0;\n  }\n\n  if (names[color] !== undefined) {\n    return names[color];\n  }\n\n  if ((match = matchers.rgb.exec(color))) {\n    return (\n      // b\n      ((parse255(match[1]) << 24) | // r\n      (parse255(match[2]) << 16) | // g\n        (parse255(match[3]) << 8) |\n        0x000000ff) >>> // a\n      0\n    );\n  }\n\n  if ((match = matchers.rgba.exec(color))) {\n    return (\n      // b\n      ((parse255(match[1]) << 24) | // r\n      (parse255(match[2]) << 16) | // g\n        (parse255(match[3]) << 8) |\n        parse1(match[4])) >>> // a\n      0\n    );\n  }\n\n  if ((match = matchers.hex3.exec(color))) {\n    return (\n      Number.parseInt(\n        match[1] +\n        match[1] + // r\n        match[2] +\n        match[2] + // g\n        match[3] +\n        match[3] + // b\n          'ff', // a\n        16\n      ) >>> 0\n    );\n  }\n\n  // https://drafts.csswg.org/css-color-4/#hex-notation\n  if ((match = matchers.hex8.exec(color))) {\n    return Number.parseInt(match[1], 16) >>> 0;\n  }\n\n  if ((match = matchers.hex4.exec(color))) {\n    return (\n      Number.parseInt(\n        match[1] +\n        match[1] + // r\n        match[2] +\n        match[2] + // g\n        match[3] +\n        match[3] + // b\n          match[4] +\n          match[4], // a\n        16\n      ) >>> 0\n    );\n  }\n\n  if ((match = matchers.hsl.exec(color))) {\n    return (\n      (hslToRgb(\n        parse360(match[1]), // h\n        parsePercentage(match[2]), // s\n        parsePercentage(match[3]) // l\n      ) |\n        0x000000ff) >>> // a\n      0\n    );\n  }\n\n  if ((match = matchers.hsla.exec(color))) {\n    return (\n      (hslToRgb(\n        parse360(match[1]), // h\n        parsePercentage(match[2]), // s\n        parsePercentage(match[3]) // l\n      ) |\n        parse1(match[4])) >>> // a\n      0\n    );\n  }\n\n  return null;\n}\n\nexport default function processColor(color) {\n  'worklet';\n  if (color === null || color === undefined || typeof color === 'number') {\n    return color;\n  }\n\n  let normalizedColor = normalizeColor(color);\n\n  if (normalizedColor === null || normalizedColor === undefined) {\n    return undefined;\n  }\n\n  if (typeof normalizedColor !== 'number') {\n    return null;\n  }\n\n  normalizedColor = ((normalizedColor << 24) | (normalizedColor >>> 8)) >>> 0;\n\n  if (Platform.OS === 'android') {\n    // Android use 32 bit *signed* integer to represent the color\n    // We utilize the fact that bitwise operations in JS also operates on\n    // signed 32 bit integers, so that we can use those to convert from\n    // *unsigned* to *signed* 32bit int that way.\n    normalizedColor = normalizedColor | 0x0;\n  }\n\n  return normalizedColor;\n}\n"]},"metadata":{},"sourceType":"module"}
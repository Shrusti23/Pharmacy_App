{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as SecureStore from \"expo-secure-store\";\nimport jwtDecode from \"jwt-decode\";\nvar key = \"authToken\";\n\nvar storeAccessToken = function storeAccessToken(authToken) {\n  return _regeneratorRuntime.async(function storeAccessToken$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(SecureStore.setItemAsync(key, authToken));\n\n        case 3:\n          _context.next = 8;\n          break;\n\n        case 5:\n          _context.prev = 5;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(\"Error storing the auth token\", _context.t0);\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 5]], Promise);\n};\n\nvar storeRefreshToken = function storeRefreshToken(authToken) {\n  return _regeneratorRuntime.async(function storeRefreshToken$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(SecureStore.setItemAsync(key, authToken));\n\n        case 3:\n          _context2.next = 8;\n          break;\n\n        case 5:\n          _context2.prev = 5;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log(\"Error storing the auth token\", _context2.t0);\n\n        case 8:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 5]], Promise);\n};\n\nvar getToken = function getToken() {\n  return _regeneratorRuntime.async(function getToken$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return _regeneratorRuntime.awrap(SecureStore.getItemAsync(key));\n\n        case 3:\n          return _context3.abrupt(\"return\", _context3.sent);\n\n        case 6:\n          _context3.prev = 6;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.log(\"Error getting the auth token\", _context3.t0);\n\n        case 9:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, [[0, 6]], Promise);\n};\n\nvar getUser = function getUser() {\n  var token;\n  return _regeneratorRuntime.async(function getUser$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return _regeneratorRuntime.awrap(getToken());\n\n        case 2:\n          token = _context4.sent;\n          return _context4.abrupt(\"return\", token ? jwtDecode(token) : null);\n\n        case 4:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar removeToken = function removeToken() {\n  return _regeneratorRuntime.async(function removeToken$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return _regeneratorRuntime.awrap(SecureStore.deleteItemAsync(key));\n\n        case 3:\n          _context5.next = 8;\n          break;\n\n        case 5:\n          _context5.prev = 5;\n          _context5.t0 = _context5[\"catch\"](0);\n          console.log(\"Error removing the auth token\", _context5.t0);\n\n        case 8:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, [[0, 5]], Promise);\n};\n\nexport default {\n  getToken: getToken,\n  getUser: getUser,\n  removeToken: removeToken,\n  storeAccessToken: storeAccessToken,\n  storeRefreshToken: storeRefreshToken\n};","map":{"version":3,"sources":["/Users/iShrusti/Documents/GitHub/Pharmacy_App/components/authorization/store.js"],"names":["SecureStore","jwtDecode","key","storeAccessToken","authToken","setItemAsync","console","log","storeRefreshToken","getToken","getItemAsync","getUser","token","removeToken","deleteItemAsync"],"mappings":";AAAA,OAAO,KAAKA,WAAZ,MAA6B,mBAA7B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,IAAMC,GAAG,GAAG,WAAZ;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAOC,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEfJ,WAAW,CAACK,YAAZ,CAAyBH,GAAzB,EAA8BE,SAA9B,CAFe;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAIrBE,UAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;;AAJqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAzB;;AAQA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAOJ,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEhBJ,WAAW,CAACK,YAAZ,CAAyBH,GAAzB,EAA8BE,SAA9B,CAFgB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAItBE,UAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;;AAJsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA1B;;AAQA,IAAME,QAAQ,GAAG,SAAXA,QAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEAT,WAAW,CAACU,YAAZ,CAAyBR,GAAzB,CAFA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAIbI,UAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;;AAJa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAjB;;AAQA,IAAMI,OAAO,GAAG,SAAVA,OAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACMF,QAAQ,EADd;;AAAA;AACRG,UAAAA,KADQ;AAAA,4CAEPA,KAAK,GAAGX,SAAS,CAACW,KAAD,CAAZ,GAAsB,IAFpB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAhB;;AAKA,IAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEVb,WAAW,CAACc,eAAZ,CAA4BZ,GAA5B,CAFU;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAIhBI,UAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;;AAJgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAApB;;AAQA,eAAe;AACbE,EAAAA,QAAQ,EAARA,QADa;AAEbE,EAAAA,OAAO,EAAPA,OAFa;AAGbE,EAAAA,WAAW,EAAXA,WAHa;AAIbV,EAAAA,gBAAgB,EAAhBA,gBAJa;AAKbK,EAAAA,iBAAiB,EAAjBA;AALa,CAAf","sourcesContent":["import * as SecureStore from \"expo-secure-store\";\nimport jwtDecode from \"jwt-decode\";\n\nconst key = \"authToken\";\n\nconst storeAccessToken = async (authToken) => {\n  try {\n    await SecureStore.setItemAsync(key, authToken);\n  } catch (error) {\n    console.log(\"Error storing the auth token\", error);\n  }\n};\n\nconst storeRefreshToken = async (authToken) => {\n  try {\n    await SecureStore.setItemAsync(key, authToken);\n  } catch (error) {\n    console.log(\"Error storing the auth token\", error);\n  }\n};\n\nconst getToken = async () => {\n  try {\n    return await SecureStore.getItemAsync(key);\n  } catch (error) {\n    console.log(\"Error getting the auth token\", error);\n  }\n};\n\nconst getUser = async () => {\n  const token = await getToken();\n  return token ? jwtDecode(token) : null;\n};\n\nconst removeToken = async () => {\n  try {\n    await SecureStore.deleteItemAsync(key);\n  } catch (error) {\n    console.log(\"Error removing the auth token\", error);\n  }\n};\n\nexport default {\n  getToken,\n  getUser,\n  removeToken,\n  storeAccessToken,\n  storeRefreshToken,\n};\n"]},"metadata":{},"sourceType":"module"}
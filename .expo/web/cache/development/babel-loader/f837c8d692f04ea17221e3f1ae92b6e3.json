{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/iShrusti/Documents/GitHub/Pharmacy_App/components/Tabs/StoreDetailsTabs/address.js\";\nimport React, { useState } from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { Modal, Portal, Button, Provider } from 'react-native-paper';\nimport { useNavigation } from \"@react-navigation/native\";\nimport * as Yup from \"yup\";\nimport ErrorMessage from \"../ErrorMessage\";\nimport authApi from \"../../api/auth\";\nimport useAuth from \"../../authorization/useAuth\";\nimport { Formik } from 'formik';\nvar validationSchema = Yup.object().shape({\n  address: Yup.string().label(\"address\").min(4, \"Enter street address\").required(),\n  apartmentnumber: Yup.string().label(\"apartmentnumber\").required(),\n  city: Yup.string().label(\"city\").required().min(4, \"city must have at least 4 characters \"),\n  state: Yup.string().label(\"state\").required().min(2, \"state must have at least 4 characters \"),\n  postalcode: Yup.string().label(\"postalcode\").required().min(4, \"postalcode must have at least 4 characters \")\n});\nexport default function Address() {\n  var navigation = useNavigation();\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  var handleSubmit = function handleSubmit(_ref) {\n    var address, apartnumber, city, state, postalcode, result;\n    return _regeneratorRuntime.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            address = _ref.address, apartnumber = _ref.apartnumber, city = _ref.city, state = _ref.state, postalcode = _ref.postalcode;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(authApi.address(address, apartnumber, city, state, postalcode));\n\n          case 3:\n            result = _context.sent;\n            console.log(result.data.address);\n\n            if (result.ok) {\n              _context.next = 8;\n              break;\n            }\n\n            if (result.data) setError(result.data.error);else {\n              setError(\"An unexpected error occurred.\");\n              console.log(result);\n            }\n            return _context.abrupt(\"return\");\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.conatainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 28\n    }\n  }, \" Hello\"));\n}\nvar styles = StyleSheet.create({\n  conatainer: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  inputView: {\n    borderRadius: 25,\n    bottom: \"28%\",\n    left: 60,\n    justifyContent: \"center\",\n    marginBottom: 50,\n    width: 500,\n    height: 48,\n    backgroundColor: \"#F4F4F4\",\n    borderWidth: 1,\n    borderRadius: 5,\n    borderColor: \"#BDBDBD\"\n  },\n  inputText: {\n    width: \"50%\",\n    height: 46,\n    color: \"black\",\n    fontFamily: \"Amiko-Regular\",\n    fontStyle: \"normal\",\n    fontWeight: \"normal\",\n    fontStyle: 18\n  },\n  edit: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    position: \"absolute\",\n    borderRadius: 25,\n    marginBottom: \"10%\",\n    fontFamily: \"Amiko-Regular\",\n    width: \"70%\",\n    height: 21,\n    fontWeight: 600,\n    fontSize: 16,\n    right: \"100%\"\n  }\n});","map":{"version":3,"sources":["/Users/iShrusti/Documents/GitHub/Pharmacy_App/components/Tabs/StoreDetailsTabs/address.js"],"names":["React","useState","Modal","Portal","Button","Provider","useNavigation","Yup","ErrorMessage","authApi","useAuth","Formik","validationSchema","object","shape","address","string","label","min","required","apartmentnumber","city","state","postalcode","Address","navigation","error","setError","handleSubmit","apartnumber","result","console","log","data","ok","styles","conatainer","StyleSheet","create","flex","backgroundColor","inputView","borderRadius","bottom","left","justifyContent","marginBottom","width","height","borderWidth","borderColor","inputText","color","fontFamily","fontStyle","fontWeight","edit","alignItems","position","fontSize","right"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { ScrollView } from \"react-native\";\nimport { View, Text, StyleSheet, TouchableOpacity,TextInput } from \"react-native\";\nimport { Modal, Portal, Button, Provider } from 'react-native-paper';\n\nimport { useNavigation } from \"@react-navigation/native\";\n\nimport * as Yup from \"yup\";\nimport ErrorMessage from \"../ErrorMessage\";\nimport authApi from \"../../api/auth\";\nimport useAuth from \"../../authorization/useAuth\";\nimport { Formik } from 'formik';\n\n\nconst validationSchema = Yup.object().shape({\n    address: Yup.string()\n      .label(\"address\")\n      .min(4,\"Enter street address\")\n      .required(),\n    apartmentnumber: Yup.string()\n      .label(\"apartmentnumber\")\n      .required(),\n    city: Yup.string()\n      .label(\"city\")\n      .required()\n      .min(4, \"city must have at least 4 characters \"),\n    state: Yup.string()\n      .label(\"state\")\n      .required()\n      .min(2, \"state must have at least 4 characters \"),\n    postalcode: Yup.string()\n      .label(\"postalcode\")\n      .required()\n      .min(4, \"postalcode must have at least 4 characters \"),\n});\n\nexport default function Address() {\n    const navigation = useNavigation();\n    const [error, setError] = useState();\n\n    const handleSubmit = async ({address,apartnumber,city,state,postalcode}) => {\n      const result = await authApi.address(address,apartnumber,city,state,postalcode);\n      console.log(result.data.address);\n  \n      if (!result.ok) {\n        if (result.data) setError(result.data.error);\n        else {\n          setError(\"An unexpected error occurred.\");\n          console.log(result);\n        }\n        return;\n      }\n      //navigation.navigate(\"EnterPharmacyDetails\");\n    };\n   \n      return (\n          <View style={styles.conatainer}>\n                           <Text> Hello</Text>\n\n               {/* <Formik\n        initialValues={{ \n          address: \"\", \n          apartmentnumber:\"\",\n          city: \"\",\n          state:\"\",\n          postalcode:\"\",\n       }}\n       // onSubmit={handleSubmit}\n        validationSchema={validationSchema}\n      >\n        {({\n          handleChange,\n          values,\n          handleSubmit,\n          errors,\n          isValid,\n          isSubmitting,\n          touched,\n          handleBlur,\n        }) => (\n          <Fragment>\n          <View style={styles.inputView}>\n              <ErrorMessage\n                errorValue={touched.address && errors.address}\n               // visible={touched.address && errors.address}\n              />\n              <TextInput\n                name=\"Street address\"\n                style={styles.inputText}\n                placeholder=\"street address\"\n                placeholderTextColor=\"#003f5c\"\n                value={values.address}\n                onChangeText={handleChange(\"address\")}\n                 autoCorrect={false}\n                onBlur={handleBlur(\"address\")}\n                autoFocus={true}\n              />\n            </View>\n            <View style={styles.inputView}>\n              <ErrorMessage\n                errorValue={touched.apartmentnumber && errors.apartmentnumber}\n               // visible={touched.apartmentnumber && errors.apartmentnumber}\n              />\n              <TextInput\n                name=\"apartment\"\n                style={styles.inputText}\n                placeholder=\"\"\n                placeholderTextColor=\"#003f5c\"\n                value={values.apartmentnumber}\n                onChangeText={handleChange(\"apartmentnumber\")}\n                 autoCorrect={false}\n                onBlur={handleBlur(\"apartmentnumber\")}\n                autoFocus={true}\n              />\n            </View>\n            <View style={styles.inputView}>\n              <ErrorMessage\n                errorValue={touched.city && errors.city}\n               // visible={touched.city && errors.city}\n              />\n              <TextInput\n                name=\"City\"\n                style={styles.inputText}\n                placeholder=\"city name\"\n                placeholderTextColor=\"#003f5c\"\n                value={values.city}\n                onChangeText={handleChange(\"city\")}\n                 autoCorrect={false}\n                onBlur={handleBlur(\"city\")}\n                autoFocus={true}\n              />\n            </View>\n            <View style={styles.inputView}>\n              <ErrorMessage\n                errorValue={touched.state && errors.state}\n               // visible={touched.state && errors.state}\n              />\n              <TextInput\n                name=\"state\"\n                style={styles.inputText}\n                placeholder=\"state\"\n                placeholderTextColor=\"#003f5c\"\n                value={values.state}\n                onChangeText={handleChange(\"state\")}\n                 autoCorrect={false}\n                onBlur={handleBlur(\"state\")}\n                autoFocus={true}\n              />\n            </View>\n            <View style={styles.inputView}>\n              <ErrorMessage\n                errorValue={touched.postalcode && errors.postalcode}\n               // visible={touched.postalcode && errors.postalcode}\n              />\n              <TextInput\n                name=\"Postalcode\"\n                style={styles.inputText}\n                placeholder=\"postalcode\"\n                placeholderTextColor=\"#003f5c\"\n                value={values.postalcode}\n                onChangeText={handleChange(\"postalcode\")}\n                 autoCorrect={false}\n                onBlur={handleBlur(\"postalcode\")}\n                autoFocus={true}\n              />\n            </View>\n            </Fragment>\n          )}\n        </Formik>\n\n             */}\n          </View>\n          );\n  }\n  const styles = StyleSheet.create({\n    conatainer:{\n      flex: 1, \n       backgroundColor: '#fff'\n    },\n    inputView: {\n        borderRadius: 25,\n        bottom: \"28%\",\n        left:60,\n        justifyContent: \"center\",\n        marginBottom: 50,\n        width: 500,\n        height: 48,\n        backgroundColor: \"#F4F4F4\",\n        borderWidth: 1,\n        borderRadius: 5,\n        borderColor: \"#BDBDBD\",\n      },\n    inputText: {\n          width: \"50%\",\n          height:46,\n          color:\"black\",\n          fontFamily: \"Amiko-Regular\",\n          fontStyle: \"normal\",\n          fontWeight: \"normal\",\n          fontStyle: 18,\n          //lineHeight: 21,\n          //opacity: 0.2,\n        },\n    edit: {\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          position: \"absolute\",\n          borderRadius: 25,\n          marginBottom: \"10%\",\n          fontFamily: \"Amiko-Regular\",\n          width: \"70%\",\n          height: 21,\n          fontWeight: 600,\n          fontSize: 16,\n          right:\"100%\"\n        },\n  })"]},"metadata":{},"sourceType":"module"}